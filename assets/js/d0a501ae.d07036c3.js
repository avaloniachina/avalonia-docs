"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[98810],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=d(n),u=r,g=p["".concat(s,".").concat(u)]||p[u]||m[u]||i;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},75321:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>k,frontMatter:()=>d,metadata:()=>p,toc:()=>u});var a=n(87462),r=(n(67294),n(3905));const i=n.p+"assets/images/image (8) (4)-be90606badd481cfc688cde76c30c1af.png",o=n.p+"assets/images/grid1-559ff4877b7872155ddc8ec7085628c8.gif",l=n.p+"assets/images/grid2-044a6bb53f563e5469d582d5d02bc90e.gif",s=n.p+"assets/images/grid3-f0bc3c1d6d771a79557ed44399e7bfd3.gif",d={description:"REFERENCE - Built-in Controls"},c="Data Grid",p={unversionedId:"reference/controls/datagrid/README",id:"reference/controls/datagrid/README",title:"Data Grid",description:"REFERENCE - Built-in Controls",source:"@site/docs/reference/controls/datagrid/README.md",sourceDirName:"reference/controls/datagrid",slug:"/reference/controls/datagrid/",permalink:"/avalonia-docs/docs/next/reference/controls/datagrid/",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/reference/controls/datagrid/README.md",tags:[],version:"current",frontMatter:{description:"REFERENCE - Built-in Controls"},sidebar:"documentationSidebar",previous:{title:"Context Menu",permalink:"/avalonia-docs/docs/next/reference/controls/contextmenu"},next:{title:"Data Grid Columns",permalink:"/avalonia-docs/docs/next/reference/controls/datagrid/datagridcolumns"}},m={},u=[{value:"NuGet Package Reference",id:"nuget-package-reference",level:2},{value:"Include Data Grid Styles ",id:"include-data-grid-styles-",level:2},{value:"Useful Properties",id:"useful-properties",level:2},{value:"Examples",id:"examples",level:2},{value:"More Information",id:"more-information",level:2}],g={toc:u},h="wrapper";function k(e){let{components:t,...n}=e;return(0,r.kt)(h,(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-grid"},"Data Grid"),(0,r.kt)("p",null,"The data grid displays repeating data in a customizable grid. The control can be styled, templated and bound."," "),(0,r.kt)("p",null,"The data grid needs to be bound to an observable collection in a view model that can be found in a related ",(0,r.kt)("strong",{parentName:"p"},"data context"),"."," "),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"To review the concept behind the ",(0,r.kt)("strong",{parentName:"p"},"data context"),", see ",(0,r.kt)("a",{parentName:"p",href:"../../../basics/data/data-binding/data-context"},"here"),".")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The data grid is in an additional ",(0,r.kt)("em",{parentName:"p"},"Avalonia UI")," package. To use the data grid in your project, you must reference the ",(0,r.kt)("strong",{parentName:"p"},"Avalonia.Controls.DataGrid")," ",(0,r.kt)("em",{parentName:"p"},"NuGet")," package, and reference the styles that it uses, see below."," ")),(0,r.kt)("h2",{id:"nuget-package-reference"},"NuGet Package Reference"),(0,r.kt)("p",null,"You must install the ",(0,r.kt)("em",{parentName:"p"},"NuGet")," package for the data grid, there are several ways of doing this. You can use ",(0,r.kt)("strong",{parentName:"p"},"Manage NuGet Packages")," from the project menu of your IDE:"),(0,r.kt)("img",{src:i,alt:""}),(0,r.kt)("p",null,"Alternatively, you can run this instruction from the command line:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"dotnet add package Avalonia.Controls.DataGrid\n")),(0,r.kt)("p",null,"Or add package reference directly to the project (",(0,r.kt)("inlineCode",{parentName:"p"},".csproj"),") file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<PackageReference Include="Avalonia.Controls.DataGrid" Version="11.0.0" />\n')),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"Note you must always install the data grid version that matches the ",(0,r.kt)("em",{parentName:"p"},"Avalonia UI")," version you are using.")),(0,r.kt)("h2",{id:"include-data-grid-styles-"},"Include Data Grid Styles"," "),(0,r.kt)("p",null,"You must reference the data grid themes to include the additional styles that the data grid uses. You can do this by adding a ",(0,r.kt)("inlineCode",{parentName:"p"},"<StyleInclude>")," element to the application (",(0,r.kt)("inlineCode",{parentName:"p"},"App.axaml")," file)."),(0,r.kt)("p",null,"For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup"},'<Application.Styles>\n    <FluentTheme />\n    <StyleInclude Source="avares://Avalonia.Controls.DataGrid/Themes/Fluent.xaml"/>\n</Application.Styles>\n')),(0,r.kt)("h2",{id:"useful-properties"},"Useful Properties"),(0,r.kt)("p",null,"You will probably use these properties most often:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"AutoGenerateColumns")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the columns will automatically generate from the bound items data source property names. (Default is false.)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ItemsSource")),(0,r.kt)("td",{parentName:"tr",align:null},"The bound collection that is used as the data source for the control.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IsReadOnly")),(0,r.kt)("td",{parentName:"tr",align:null},"Sets the binding direction to one-way when true. The default is false - the grid will accept changes to the bound data.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CanUserReorderColumns")),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates whether the user can change the column display order by dragging column headers with the pointer. (Default is false.)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CanUserResizeColumns")),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates whether the user can adjust column widths using the pointer. (Default is false.)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"CanUserSortColumns")),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates whether the user can sort columns by clicking the column header. (Default is true.)")))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("p",null,"This example will generate a basic data grid, with column header names auto-generated from the item class. The items data source is bound to the main window view model."," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<DataGrid Margin="20" ItemsSource="{Binding People}" \n          AutoGenerateColumns="True" IsReadOnly="True" \n          GridLinesVisibility="All"\n          BorderThickness="1" BorderBrush="Gray">\n</DataGrid>\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"title='C# View Model'",title:"'C#",View:!0,"Model'":!0},'using AvaloniaControls.Models;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\nnamespace AvaloniaControls.ViewModels\n{\n    public class MainWindowViewModel : ViewModelBase\n    {\n        public ObservableCollection<Person> People { get; }\n\n        public MainWindowViewModel()\n        {\n            var people = new List<Person> \n            {\n                new Person("Neil", "Armstrong"),\n                new Person("Buzz", "Lightyear"),\n                new Person("James", "Kirk")\n            };\n            People = new ObservableCollection<Person>(people);\n        }\n    }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"title='C# Item Class'",title:"'C#",Item:!0,"Class'":!0},"public class Person\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n    \n    public Person(string firstName , string lastName)\n    {\n        FirstName = firstName;\n        LastName = lastName;\n    }\n}\n")),(0,r.kt)("img",{src:o,alt:""}),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"These examples use the MVVM pattern with data binding to an ",(0,r.kt)("inlineCode",{parentName:"p"},"ObservableCollection"),". For more information on the concepts behind data binding, see ",(0,r.kt)("a",{parentName:"p",href:"../../../basics/data/data-binding"},"here"),".")),(0,r.kt)("p",null,"Property names from the item class will generally not make good column names. This example adds custom header names to the grid. It also allows column reordering and resizing and disallows the default column sorting option:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-markup"},'<DataGrid Margin="20" ItemsSource="{Binding People}"\n          IsReadOnly="True"\n          CanUserReorderColumns="True"\n          CanUserResizeColumns="True"\n          CanUserSortColumns="False"\n          GridLinesVisibility="All"\n          BorderThickness="1" BorderBrush="Gray">\n  <DataGrid.Columns>\n     <DataGridTextColumn Header="First Name"  Binding="{Binding FirstName}"/>\n     <DataGridTextColumn Header="Last Name" Binding="{Binding LastName}" />\n  </DataGrid.Columns>\n</DataGrid>\n')),(0,r.kt)("img",{src:l,alt:""}),(0,r.kt)("p",null,"This example shows how the data grid can accept changes and update the underlying collection, and use different column types to edit the data:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<DataGrid Margin="20" ItemsSource="{Binding People}"        \n          GridLinesVisibility="All"\n          BorderThickness="1" BorderBrush="Gray">\n  <DataGrid.Columns>\n     <DataGridTextColumn Header="First Name"  Binding="{Binding FirstName}"/>\n     <DataGridTextColumn Header="Last Name" Binding="{Binding LastName}" />\n     <DataGridCheckBoxColumn Header="Fictitious?" Binding="{Binding IsFictitious}" />\n  </DataGrid.Columns>\n</DataGrid>\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"title='C# View Model'",title:"'C#",View:!0,"Model'":!0},'using AvaloniaControls.Models;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\nnamespace AvaloniaControls.ViewModels\n{\n    public class MainWindowViewModel : ViewModelBase\n    {\n        public ObservableCollection<Person> People { get; }\n\n        public MainWindowViewModel()\n        {\n            var people = new List<Person> \n            {\n                new Person("Neil", "Armstrong", false),\n                new Person("Buzz", "Lightyear", true),\n                new Person("James", "Kirk", true)\n            };\n            People = new ObservableCollection<Person>(people);\n        }\n    }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"title='C# Item Class'",title:"'C#",Item:!0,"Class'":!0},"public class Person\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n    public bool IsFictitious { get; set; }\n\n    public Person(string firstName , string lastName, bool isFictitious)\n    {\n        FirstName = firstName;\n        LastName = lastName;\n        IsFictitious = isFictitious;\n    }\n}\n")),(0,r.kt)("img",{src:s,alt:""}),(0,r.kt)("h2",{id:"more-information"},"More Information"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"For more information about the different kinds of data grid column, see the ",(0,r.kt)("a",{parentName:"p",href:"/avalonia-docs/docs/next/reference/controls/datagrid/datagridcolumns"},"next page"),".")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"For the complete API documentation about this control, see ",(0,r.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/DataGrid/"},"here"),".")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"View the source code on ",(0,r.kt)("em",{parentName:"p"},"GitHub")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls.DataGrid/DataGrid.cs"},(0,r.kt)("inlineCode",{parentName:"a"},"DataGrid.cs")))))}k.isMDXComponent=!0}}]);