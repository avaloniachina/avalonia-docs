"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[74316],{76225:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var i=t(85893),a=t(11151);const s={id:"bindings",title:"Bindings"},o=void 0,d={id:"data-binding/bindings",title:"Bindings",description:"You bind in XAML using the  markup extension. By using bindings \\(assuming you've implemented change notifications\\) any changes to the data context will automatically be updated in the control.",source:"@site/versioned_docs/version-0.10.x/data-binding/bindings.md",sourceDirName:"data-binding",slug:"/data-binding/bindings",permalink:"/avalonia-docs/docs/0.10.x/data-binding/bindings",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/data-binding/bindings.md",tags:[],version:"0.10.x",frontMatter:{id:"bindings",title:"Bindings"},sidebar:"documentationSidebar",previous:{title:"Change Notifications",permalink:"/avalonia-docs/docs/0.10.x/data-binding/change-notifications"},next:{title:"Compiled Bindings",permalink:"/avalonia-docs/docs/0.10.x/data-binding/compiled-bindings"}},r={},l=[{value:"Binding Path",id:"binding-path",level:2},{value:"Binding Modes",id:"binding-modes",level:2},{value:"String Formatting",id:"string-formatting",level:2},{value:"Samples",id:"samples",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["You bind in XAML using the ",(0,i.jsx)(n.code,{children:"{Binding}"})," markup extension. By using bindings (assuming you've implemented ",(0,i.jsx)(n.a,{href:"change-notifications",children:"change notifications"}),") any changes to the data context will automatically be updated in the control."]}),"\n",(0,i.jsxs)(n.p,{children:["By default a binding binds to a property on the ",(0,i.jsx)(n.a,{href:"the-datacontext",children:(0,i.jsx)(n.code,{children:"DataContext"})}),", e.g.:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markup",children:'\x3c!-- Binds to the TextBlock\'s DataContext.Name property --\x3e\n<TextBlock Text="{Binding Name}"/>\n\n\x3c!-- Which is the same as (\'Path\' is optional) --\x3e\n<TextBlock Text="{Binding Path=Name}"/>\n'})}),"\n",(0,i.jsx)(n.p,{children:"An empty binding binds to DataContext itself"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markup",children:'\x3c!-- Binds to the TextBlock\'s DataContext property --\x3e\n<TextBlock Text="{Binding}"/>\n\n\x3c!-- Which is the same as --\x3e\n<TextBlock Text="{Binding .}"/>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["We call the property on the control the binding ",(0,i.jsx)(n.em,{children:"target"})," and the property on the ",(0,i.jsx)(n.code,{children:"DataContext"})," the binding ",(0,i.jsx)(n.em,{children:"source"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"binding-path",children:"Binding Path"}),"\n",(0,i.jsxs)(n.p,{children:["The binding path above can be a single property, or it can be a chain of properties. For example if the object assigned to the ",(0,i.jsx)(n.code,{children:"DataContext"})," has a ",(0,i.jsx)(n.code,{children:"Student"})," property, and the value of this property has a ",(0,i.jsx)(n.code,{children:"Name"}),", you can bind to the student name using:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markup",children:'<TextBlock Text="{Binding Student.Name}"/>\n'})}),"\n",(0,i.jsx)(n.p,{children:"You can also include array/list indexers in binding paths:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markup",children:'<TextBlock Text="{Binding Students[0].Name}"/>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"binding-modes",children:"Binding Modes"}),"\n",(0,i.jsxs)(n.p,{children:["You can change the behavior of a ",(0,i.jsx)(n.code,{children:"{Binding}"})," by specifying a binding ",(0,i.jsx)(n.code,{children:"Mode"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markup",children:'<TextBlock Text="{Binding Name, Mode=OneTime}">\n'})}),"\n",(0,i.jsx)(n.p,{children:"The available binding modes are:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Mode"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"OneWay"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Changes to the source are automatically propagated to the target"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"TwoWay"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Changes to the source are automatically propagated to the target and vice-versa"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"OneTime"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The value from the source is propagated at initialization to the target and subsequent changes are ignored"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"OneWayToSource"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Changes to the target are propagated to the source"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"Default"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"The binding mode is based on the property"})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"Default"})," mode is assumed if one is not specified. This mode is generally ",(0,i.jsx)(n.code,{children:"OneWay"})," for control properties that do not change due to user input (e.g. ",(0,i.jsx)(n.code,{children:"TextBlock.Text"}),") and ",(0,i.jsx)(n.code,{children:"TwoWay"})," for control properties that ",(0,i.jsx)(n.em,{children:"do"})," change due to user input (e.g. ",(0,i.jsx)(n.code,{children:"TextBox.Text"}),")."]}),"\n",(0,i.jsx)(n.h2,{id:"string-formatting",children:"String Formatting"}),"\n",(0,i.jsx)(n.p,{children:"You can apply a format string to the binding to influence how the value is represented in the UI:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-markup",children:'\x3c!-- Option 1: Use string format without curly braces --\x3e\n<TextBlock Text="{Binding FloatValue, StringFormat=0.0}" />\n\n\x3c!-- Option 2: Use curly braces {} to escape string format --\x3e\n<TextBlock Text="{Binding FloatValue, StringFormat={}{0:0.0}}" />\n\n\x3c!-- Option 3: Use backslash \\{ to escape string format --\x3e\n<TextBlock Text="{Binding FloatValue, StringFormat=\\{0:0.0\\}}" />\n\n\x3c!-- Option 4: If the string format does not start with {0}, you don\'t need to escape the string format. --\x3e\n\x3c!-- Note: If you have a whitespace in your string format, surround it with single quotes \'\' --\x3e\n<TextBlock Text="{Binding Animals.Count, StringFormat=\'I have {0} animals.\'}" />\n\x3c!-- Note: You need to escape the curly braces in case your format string starts with the value you are binding, like so: --\x3e\n<TextBlock Text="{Binding Animals.Count, StringFormat=\'{}{0} animals live in the farm.\'}" />\n'})}),"\n",(0,i.jsxs)(n.p,{children:["When a ",(0,i.jsx)(n.code,{children:"StringFormat"})," parameter is present, the value of the binding will be converted using the ",(0,i.jsx)(n.code,{children:"StringFormatValueConverter"})," which will be passed the format string."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Read more about the available string formats in the ",(0,i.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.string.format",children:"Microsoft Docs"})]})}),"\n",(0,i.jsx)(n.h2,{id:"samples",children:"Samples"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Avalonia.Samples/tree/main/src/Avalonia.Samples/MVVM/BasicMvvmSample",children:"Basic MVVM Sample"})})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>o});var i=t(67294);const a={},s=i.createContext(a);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);