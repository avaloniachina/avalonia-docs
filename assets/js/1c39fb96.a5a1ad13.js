"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[27363],{22772:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var s=t(85893),i=t(11151);const a={id:"headless-xunit",title:"Headless Testing with XUnit"},l=void 0,o={id:"concepts/headless/headless-xunit",title:"Headless Testing with XUnit",description:"Preparation",source:"@site/docs/concepts/headless/headless-xunit.md",sourceDirName:"concepts/headless",slug:"/concepts/headless/headless-xunit",permalink:"/avalonia-docs/docs/concepts/headless/headless-xunit",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/concepts/headless/headless-xunit.md",tags:[],version:"current",frontMatter:{id:"headless-xunit",title:"Headless Testing with XUnit"},sidebar:"documentationSidebar",previous:{title:"Headless Platform",permalink:"/avalonia-docs/docs/concepts/headless/"},next:{title:"Headless Testing with NUnit",permalink:"/avalonia-docs/docs/concepts/headless/headless-nunit"}},d={},c=[{value:"Preparation",id:"preparation",level:2},{value:"Install packages",id:"install-packages",level:2},{value:"Setup Application",id:"setup-application",level:2},{value:"Initialize XUnit Tests",id:"initialize-xunit-tests",level:2},{value:"Test Example",id:"test-example",level:2}];function r(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"preparation",children:"Preparation"}),"\n",(0,s.jsxs)(n.p,{children:['This page assumes that XUnit project was already created.\nIf not, please follow XUnit "Getting Started" and "Installation" here ',(0,s.jsx)(n.a,{href:"https://xunit.net/docs/getting-started/netfx/visual-studio",children:"https://xunit.net/docs/getting-started/netfx/visual-studio"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"install-packages",children:"Install packages"}),"\n",(0,s.jsx)(n.p,{children:"Aside from XUnit packages, we need to install two more packages:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/Avalonia.Headless.XUnit",children:"Avalonia.Headless.XUnit"})," which also includes Avalonia."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://www.nuget.org/packages/Avalonia.Themes.Fluent",children:"Avalonia.Themes.Fluent"})," as even headless controls need a theme"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"Headless platform doesn't require any specific theme, and it is possible to swap FluentTheme with any other."})}),"\n",(0,s.jsx)(n.h2,{id:"setup-application",children:"Setup Application"}),"\n",(0,s.jsxs)(n.p,{children:["As in any other Avalonia app, an ",(0,s.jsx)(n.code,{children:"Application"})," instance needs to be created, and themes need to be applied. When using the Headless platform, the setup is not much different from a regular Avalonia app and can mostly be reused."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",metastring:"title=App.axaml",children:'<Application xmlns="https://github.com/avaloniaui"\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n             x:Class="Tests.App">\n  <Application.Styles>\n    <FluentTheme />\n  </Application.Styles>\n</Application>\n'})}),"\n",(0,s.jsx)(n.p,{children:"And the code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"title=App.axaml.cs",children:"using Avalonia;\nusing Avalonia.Headless;\n\npublic class App : Application\n{\n    public override void Initialize()\n    {\n        AvaloniaXamlLoader.Load(this);\n    }\n}\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Usually, the ",(0,s.jsx)(n.code,{children:"BuildAvaloniaApp"})," method is defined in the Program.cs file, but NUnit/XUnit tests don't have it, so it is defined in the ",(0,s.jsx)(n.code,{children:"App"})," file instead."]})}),"\n",(0,s.jsx)(n.h2,{id:"initialize-xunit-tests",children:"Initialize XUnit Tests"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"[AvaloniaTestApplication]"})," attribute wires the tests in the current project with the specific application. It needs to be defined once per project in any file."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:"[assembly: AvaloniaTestApplication(typeof(TestAppBuilder))]\n\npublic class TestAppBuilder\n{\n    public static AppBuilder BuildAvaloniaApp() => AppBuilder.Configure<App>()\n        .UseHeadless(new AvaloniaHeadlessPlatformOptions());\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"test-example",children:"Test Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'[AvaloniaFact]\npublic void Should_Type_Text_Into_TextBox()\n{\n    // Setup controls:\n    var textBox = new TextBox();\n    var window = new Window { Content = textBox };\n\n    // Open window:\n    window.Show();\n\n    // Focus text box:\n    textBox.Focus();\n\n    // Simulate text input:\n    window.KeyTextInput("Hello World");\n\n    // Assert:\n    Assert.Equal("Hello World", textBox.Text);\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Instead of the typical ",(0,s.jsx)(n.code,{children:"[Fact]"})," attribute, we need to use ",(0,s.jsx)(n.code,{children:"[AvaloniaFact]"})," as it sets up the UI thread. Similarly, instead of ",(0,s.jsx)(n.code,{children:"[Theory]"}),", there is a ",(0,s.jsx)(n.code,{children:"[AvaloniaTheory]"})," attribute."]})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>l});var s=t(67294);const i={},a=s.createContext(i);function l(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);