"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[76016],{15858:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>h});var i=n(85893),s=n(11151);const o={id:"the-design-preview",title:"The Design Preview"},a=void 0,r={id:"get-started/test-drive/the-design-preview",title:"The Design Preview",description:"On this page, you will explore the attributes of the window; and then use some of them to adjust the size of the window when it is shown in the preview pane.",source:"@site/docs/get-started/test-drive/the-design-preview.md",sourceDirName:"get-started/test-drive",slug:"/get-started/test-drive/the-design-preview",permalink:"/avalonia-docs/docs/get-started/test-drive/the-design-preview",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/get-started/test-drive/the-design-preview.md",tags:[],version:"current",frontMatter:{id:"the-design-preview",title:"The Design Preview"},sidebar:"documentationSidebar",previous:{title:"Input Controls",permalink:"/avalonia-docs/docs/get-started/test-drive/input-controls"},next:{title:"Respond to an Event",permalink:"/avalonia-docs/docs/get-started/test-drive/respond-to-an-event"}},d={},h=[];function c(e){const t={code:"code",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"On this page, you will explore the attributes of the window; and then use some of them to adjust the size of the window when it is shown in the preview pane."}),"\n",(0,i.jsxs)(t.p,{children:["Examine the XAML for the ",(0,i.jsx)(t.code,{children:"<Window>"})," tag. It will look like this:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",children:'<Window xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n        mc:Ignorable="d" d:DesignWidth="400" d:DesignHeight="550"\n        x:Class="GetStartedApp.MainWindow"\n        Title="GetStartedApp">\n'})}),"\n",(0,i.jsx)(t.p,{children:"The window tag starts by defining some of the XML namespaces that Avalonia uses. The aliases 'x', 'd' and 'mc' are used."}),"\n",(0,i.jsxs)(t.p,{children:["The design namespace 'd' allows the design-time attributes ",(0,i.jsx)(t.code,{children:"d:DesignWidth"})," and ",(0,i.jsx)(t.code,{children:"d:DesignHeight"}),"to be set. In the above code sample, these have been set to make the preview look more like a mobile (portrait orientation) display."]}),"\n",(0,i.jsx)(t.p,{children:"With these attributes set, the preview of the window now looks like this:"}),"\n",(0,i.jsx)("div",{style:{textAlign:"center"},children:(0,i.jsx)("img",{src:"/img/get-started/test-drive/design-preview.png",alt:"The design preview",width:"460"})}),"\n",(0,i.jsx)(t.p,{children:"On the next page, you will see how to add some action to the app by responding to the button click event."})]})}function l(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>r,a:()=>a});var i=n(67294);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);