"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[97701],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,b=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?o.createElement(b,i(i({ref:t},c),{},{components:n})):o.createElement(b,i({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},42263:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var o=n(87462),r=(n(67294),n(3905));const a=n.p+"assets/images/button-b78a2bc2fa15ec889b8f2b5da0fdb189.gif",i={description:"REFERENCE - Built-in Controls"},l="Button",s={unversionedId:"reference/controls/buttons/button",id:"reference/controls/buttons/button",title:"Button",description:"REFERENCE - Built-in Controls",source:"@site/docs/reference/controls/buttons/button.md",sourceDirName:"reference/controls/buttons",slug:"/reference/controls/buttons/button",permalink:"/avalonia-docs/docs/next/reference/controls/buttons/button",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/reference/controls/buttons/button.md",tags:[],version:"current",frontMatter:{description:"REFERENCE - Built-in Controls"},sidebar:"documentationSidebar",previous:{title:"Button Controls",permalink:"/avalonia-docs/docs/next/reference/controls/buttons/"},next:{title:"Button Spinner",permalink:"/avalonia-docs/docs/next/reference/controls/buttons/buttonspinner"}},p={},c=[{value:"Useful Properties",id:"useful-properties",level:2},{value:"Example",id:"example",level:2},{value:"More Information",id:"more-information",level:2}],u={toc:c},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"button"},"Button"),(0,r.kt)("p",null,"The button is a control that reacts to pointer actions (and has some keyboard equivalents). It presents visual feedback in the form of a depressed state when the pointer is down."),(0,r.kt)("p",null,"A pointer-down to pointer release sequence is interpreted as a click; and this behaviour is configurable."," "),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"When determining if a button is pressed by the user, always use the ",(0,r.kt)("inlineCode",{parentName:"p"},"Click")," event instead of ",(0,r.kt)("inlineCode",{parentName:"p"},"PointerPressed"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"Click")," is the high-level event specific to a ",(0,r.kt)("inlineCode",{parentName:"p"},"Button")," that indicates it has been pressed."),(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"PointerPressed")," is more a low-level input event: one that the ",(0,r.kt)("inlineCode",{parentName:"p"},"Button")," needs to handle internally to raise the ",(0,r.kt)("inlineCode",{parentName:"p"},"Click")," event. Since ",(0,r.kt)("inlineCode",{parentName:"p"},"Button")," handles ",(0,r.kt)("inlineCode",{parentName:"p"},"PointerPressed")," (sets ",(0,r.kt)("inlineCode",{parentName:"p"},"IsHandled")," to true), applications will never receive this event as in some other controls.")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Click is one of many button events, for a full list see ",(0,r.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/Button/#Events"},"here"),".")),(0,r.kt)("p",null,"A button can raise a click event in the code-behind. Alternatively you can bind an instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"ICommand")," to the command property. The bound command will then be executed whenever the button is clicked."," "),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"For guidance on how to bind to a command, see ",(0,r.kt)("a",{parentName:"p",href:"../../../basics/user-interface/adding-interactivity"},"here"),".")),(0,r.kt)("h2",{id:"useful-properties"},"Useful Properties"),(0,r.kt)("p",null,"You will probably use these properties most often:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ClickMode")),(0,r.kt)("td",{parentName:"tr",align:null},"Describes how the button should react to clicks.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Command")),(0,r.kt)("td",{parentName:"tr",align:null},"An instance of ",(0,r.kt)("inlineCode",{parentName:"td"},"ICommand")," to be invoked when the button is clicked.")))),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)("p",null,"This example shows a simple button and a C# code-behind click event handler."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<StackPanel Margin="20">\n  <Button Click="ClickHandler">Press Me!</Button>\n  <TextBlock Margin="0 10" x:Name="message">Ready...</TextBlock>\n</StackPanel>\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"title='C#'",title:"'C#'"},'public partial class MainWindow : Window\n{\n    public MainWindow()\n    {\n        InitializeComponent();\n    }\n\n    public void ClickHandler(object sender, RoutedEventArgs args)\n    {\n        message.Text = "Button clicked!";\n    }\n}\n')),(0,r.kt)("img",{src:a,alt:""}),(0,r.kt)("h2",{id:"more-information"},"More Information"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"For the complete API documentation about this control, see ",(0,r.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/Button/"},"here"),".")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"View the source code on ",(0,r.kt)("em",{parentName:"p"},"GitHub")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/Button.cs"},(0,r.kt)("inlineCode",{parentName:"a"},"Button.cs")))))}m.isMDXComponent=!0}}]);