"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[85331],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>f});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),l=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(r),d=n,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return r?a.createElement(f,i(i({ref:t},c),{},{components:r})):a.createElement(f,i({ref:t},c))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:n,i[1]=p;for(var l=2;l<o;l++)i[l]=r[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},96572:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var a=r(87462),n=(r(67294),r(3905));const o={description:"TUTORIALS - Music Store App"},i="Conclusion",p={unversionedId:"tutorials/music-store-app/summary",id:"tutorials/music-store-app/summary",title:"Conclusion",description:"TUTORIALS - Music Store App",source:"@site/docs/tutorials/music-store-app/summary.md",sourceDirName:"tutorials/music-store-app",slug:"/tutorials/music-store-app/summary",permalink:"/avalonia-docs/docs/next/tutorials/music-store-app/summary",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/tutorials/music-store-app/summary.md",tags:[],version:"current",frontMatter:{description:"TUTORIALS - Music Store App"},sidebar:"documentationSidebar",previous:{title:"Load Data at Start-up",permalink:"/avalonia-docs/docs/next/tutorials/music-store-app/load-data-at-startup"},next:{title:"Basics",permalink:"/avalonia-docs/docs/next/basics/"}},s={},l=[{value:"Application Solution Architecture",id:"application-solution-architecture",level:2},{value:"Further Reading",id:"further-reading",level:2}],c={toc:l},u="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"conclusion"},"Conclusion"),(0,n.kt)("p",null,"In this tutorial you have seen how ",(0,n.kt)("em",{parentName:"p"},"Avalonia UI")," can be used to create a highly graphical desktop app."," "),(0,n.kt)("h2",{id:"application-solution-architecture"},"Application Solution Architecture"),(0,n.kt)("p",null,"This tutorial has used an application solution architecture that uses the MVVM pattern with the help of the ",(0,n.kt)("em",{parentName:"p"},"ReactiveUI")," framework. It manages multiple windows from the code-behind files."," "),(0,n.kt)("p",null,"Application state is kept in the 'top level' view model, and can be persisted to disk. The main window and search dialog are composed from in ",(0,n.kt)("em",{parentName:"p"},"Avalonia UI")," window controls, built-in controls and user controls."," "),(0,n.kt)("p",null,"This tutorial application targets a windowing platform such as ",(0,n.kt)("em",{parentName:"p"},"Apple Mac OS")," or ",(0,n.kt)("em",{parentName:"p"},"Windows"),"."," "),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"To learn more about targeting applications for iOS (Apple) platforms, see ",(0,n.kt)("a",{parentName:"p",href:"../../guides/platforms/ios"},"here"),".")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"To learn more about targeting applications for Android mobile devices, see ",(0,n.kt)("a",{parentName:"p",href:"../../guides/platforms/android"},"here"),".")),(0,n.kt)("h2",{id:"further-reading"},"Further Reading"),(0,n.kt)("p",null,"For a full list of the ",(0,n.kt)("em",{parentName:"p"},"Avalonia UI")," tutorials, see ",(0,n.kt)("a",{parentName:"p",href:".."},"here"),"."))}m.isMDXComponent=!0}}]);