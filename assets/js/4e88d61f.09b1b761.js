"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[87139],{57794:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>d,toc:()=>c});var t=i(85893),o=i(11151);const a={id:"windows",title:"Windows"},s=void 0,d={id:"getting-started/windows",title:"Windows",description:"Window is the top-level control in Avalonia.",source:"@site/versioned_docs/version-0.10.x/getting-started/windows.md",sourceDirName:"getting-started",slug:"/getting-started/windows",permalink:"/avalonia-docs/docs/0.10.x/getting-started/windows",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/getting-started/windows.md",tags:[],version:"0.10.x",frontMatter:{id:"windows",title:"Windows"},sidebar:"documentationSidebar",previous:{title:"Graphics & Animations",permalink:"/avalonia-docs/docs/0.10.x/getting-started/programming-with-avalonia/graphics-and-animations"},next:{title:"UserControls",permalink:"/avalonia-docs/docs/0.10.x/getting-started/usercontrols"}},r={},c=[{value:"Visual Studio",id:"visual-studio",level:3},{value:".NET Core CLI",id:"net-core-cli",level:3}];function l(e){const n={a:"a",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"Window"})," is the top-level control in Avalonia."]}),"\n",(0,t.jsxs)(n.p,{children:["A window consists of two parts: a ",(0,t.jsx)(n.a,{href:"/avalonia-docs/docs/0.10.x/guides/basics/introduction-to-xaml",children:"XAML file"})," (e.g. ",(0,t.jsx)(n.code,{children:"MainWindow.axaml"}),") and a ",(0,t.jsx)(n.a,{href:"/avalonia-docs/docs/0.10.x/guides/basics/code-behind",children:"code-behind"})," file (e.g. ",(0,t.jsx)(n.code,{children:"MainWindow.axaml.cs"}),"). The code-behind defines a .NET class which represents the window."]}),"\n",(0,t.jsxs)(n.p,{children:["For more information and examples, see the ",(0,t.jsx)(n.a,{href:"/avalonia-docs/docs/0.10.x/controls/window",children:(0,t.jsx)(n.code,{children:"Window"})})," control."]}),"\n",(0,t.jsxs)(n.p,{children:["The default application templates create a single ",(0,t.jsx)(n.code,{children:"Window"})," called ",(0,t.jsx)(n.code,{children:"MainWindow"}),". You can create additional windows from templates too:"]}),"\n",(0,t.jsx)(n.h3,{id:"visual-studio",children:"Visual Studio"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Right click the folder in Solution Explorer that you'd like to add the window to"}),"\n",(0,t.jsxs)(n.li,{children:["Select the ",(0,t.jsx)(n.code,{children:"Add -> New Item"})," menu item"]}),"\n",(0,t.jsx)(n.li,{children:'In the dialog that appears, navigate to the "Avalonia" section in the category tree'}),"\n",(0,t.jsx)(n.li,{children:'Select "Window (Avalonia)"'}),"\n",(0,t.jsx)(n.li,{children:'Enter your window name under "Name"'}),"\n",(0,t.jsx)(n.li,{children:'Click the "Add" button'}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"net-core-cli",children:".NET Core CLI"}),"\n",(0,t.jsxs)(n.p,{children:["Run this command replacing ",(0,t.jsx)(n.code,{children:"[namespace]"})," with the namespace you'd like to create the window in and ",(0,t.jsx)(n.code,{children:"[name]"})," with the name of the window."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"dotnet new avalonia.window -na [namespace] -n [name]\n"})}),"\n",(0,t.jsxs)(n.p,{children:["For more information see ",(0,t.jsx)(n.a,{href:"https://github.com/AvaloniaUI/avalonia-dotnet-templates/",children:"the .NET core templates repository"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>d,a:()=>s});var t=i(67294);const o={},a=t.createContext(o);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);