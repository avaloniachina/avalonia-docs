"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[6576],{86926:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>r});var n=a(85893),s=a(11151);const o={description:"CONCEPTS - Data Templates"},c="Creating in Code",i={id:"concepts/templates/creating-data-templates-in-code",title:"Creating in Code",description:"CONCEPTS - Data Templates",source:"@site/docs/concepts/templates/creating-data-templates-in-code.md",sourceDirName:"concepts/templates",slug:"/concepts/templates/creating-data-templates-in-code",permalink:"/avalonia-docs/docs/concepts/templates/creating-data-templates-in-code",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/concepts/templates/creating-data-templates-in-code.md",tags:[],version:"current",frontMatter:{description:"CONCEPTS - Data Templates"},sidebar:"documentationSidebar",previous:{title:"Reusing Data Templates",permalink:"/avalonia-docs/docs/concepts/templates/reusing-data-templates"},next:{title:"Taking More Control in Code",permalink:"/avalonia-docs/docs/concepts/templates/implement-idatatemplate"}},l={},r=[{value:"More Examples",id:"more-examples",level:2}];function p(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"creating-in-code",children:"Creating in Code"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.em,{children:"Avalonia UI"})," supports creating a data template in code. You can do this by using the ",(0,n.jsx)(t.code,{children:"FuncDataTemplate<T>"})," class that supports the ",(0,n.jsx)(t.code,{children:"IDataTemplate"})," interface."]}),"\n",(0,n.jsxs)(t.p,{children:["At its simplest you can create a data template by passing a lambda function that creates a control to the ",(0,n.jsx)(t.code,{children:"FuncDataTemplate<T>"})," constructor, like this:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-csharp",children:'var template = new FuncDataTemplate<Student>((value, namescope) =>\n    new TextBlock\n    {\n        [!TextBlock.TextProperty] = new Binding("FirstName"),\n    });\n'})}),"\n",(0,n.jsx)(t.p,{children:"Which is equivalent to the XAML:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-markup",children:'<DataTemplate DataType="{x:Type local:Student}">\n    <TextBlock Text="{Binding FirstName}"/>\n</DataTemplate>\n'})}),"\n",(0,n.jsx)(t.h2,{id:"more-examples",children:"More Examples"}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsxs)(t.p,{children:["Have a look at some more advanced uses of the ",(0,n.jsx)(t.code,{children:"FuncDataTemplate<T>"}),"class in the ",(0,n.jsx)(t.em,{children:"Avalonia UI"})," sample project ",(0,n.jsx)(t.a,{href:"https://github.com/AvaloniaUI/Avalonia.Samples/blob/main/src/Avalonia.Samples/DataTemplates/FuncDataTemplateSample",children:"here"}),"."]})})]})}function d(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},11151:(e,t,a)=>{a.d(t,{Z:()=>i,a:()=>c});var n=a(67294);const s={},o=n.createContext(s);function c(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);