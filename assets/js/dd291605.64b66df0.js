"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[65442],{3905:(e,n,t)=>{t.d(n,{Zo:()=>g,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),s=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},g=function(e){var n=s(e.components);return a.createElement(p.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),c=s(t),d=r,m=c["".concat(p,".").concat(d)]||c[d]||u[d]||o;return t?a.createElement(m,i(i({ref:n},g),{},{components:t})):a.createElement(m,i({ref:n},g))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[c]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},81252:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>g});var a=t(87462),r=(t(67294),t(3905));const o=t.p+"assets/images/image (3)-62a84df426847819fecaf00f82e644b7.png",i={id:"logging-errors-and-warnings",title:"How To Log Errors and Warnings"},l="How To Log Errors and Warnings",p={unversionedId:"guides/implementation-guides/logging-errors-and-warnings",id:"guides/implementation-guides/logging-errors-and-warnings",title:"How To Log Errors and Warnings",description:"This guide shows you how to can log warnings and errors in Avalonia UI using the standard (Microsoft)System.Diagnostics.Trace component. &#x20;",source:"@site/docs/guides/implementation-guides/logging-errors-and-warnings.md",sourceDirName:"guides/implementation-guides",slug:"/guides/implementation-guides/logging-errors-and-warnings",permalink:"/avalonia-docs/docs/next/guides/implementation-guides/logging-errors-and-warnings",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/guides/implementation-guides/logging-errors-and-warnings.md",tags:[],version:"current",frontMatter:{id:"logging-errors-and-warnings",title:"How To Log Errors and Warnings"},sidebar:"documentationSidebar",previous:{title:"How To Implement Dependency Injection",permalink:"/avalonia-docs/docs/next/guides/implementation-guides/how-to-implement-dependency-injection"},next:{title:"How To Use Live Preview",permalink:"/avalonia-docs/docs/next/guides/implementation-guides/ide-support"}},s={},g=[{value:"Log Area",id:"log-area",level:2}],c={toc:g},u="wrapper";function d(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"how-to-log-errors-and-warnings"},"How To Log Errors and Warnings"),(0,r.kt)("p",null,"This guide shows you how to can log warnings and errors in ",(0,r.kt)("em",{parentName:"p"},"Avalonia UI")," using the standard ",(0,r.kt)("em",{parentName:"p"},"(Microsoft)"),(0,r.kt)("inlineCode",{parentName:"p"},"System.Diagnostics.Trace")," component. "," "),(0,r.kt)("p",null,"The code to achieve logging is added to your project by the ",(0,r.kt)("em",{parentName:"p"},"Avalonia UI")," solution templates if you use them."),(0,r.kt)("p",null,"To enable, or to check that logging is enabled, follow this procedure:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Locate the ",(0,r.kt)("strong",{parentName:"li"},"Program.cs")," file for your application."),(0,r.kt)("li",{parentName:"ul"},"Check that the ",(0,r.kt)("inlineCode",{parentName:"li"},"BuildAvaloniaApp")," method calls ",(0,r.kt)("inlineCode",{parentName:"li"},"LogToTrace"),", for example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static AppBuilder BuildAvaloniaApp()\n    => AppBuilder.Configure<App>()\n        .UsePlatformDetect()\n        .LogToTrace();\n")),(0,r.kt)("p",null,"Without parameters, ",(0,r.kt)("inlineCode",{parentName:"p"},"LogToTrace")," will log messages with a severity of ",(0,r.kt)("inlineCode",{parentName:"p"},"Warning")," or higher. You can change this to another level by passing a ",(0,r.kt)("inlineCode",{parentName:"p"},"LogLevel")," parameter to the ",(0,r.kt)("inlineCode",{parentName:"p"},"LogToTrace")," call. For example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"using Avalonia.Logging;\n...\npublic static AppBuilder BuildAvaloniaApp()\n    => AppBuilder.Configure<App>()\n        .UsePlatformDetect()\n        .LogToTrace(LogEventLevel.Verbose)\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"For the full API documentation on the ",(0,r.kt)("inlineCode",{parentName:"p"},"LogEventLevel")," enum, see ",(0,r.kt)("a",{parentName:"p",href:"https://reference.avaloniaui.net/api/Avalonia.Logging/LogEventLevel/"},"here"),".")),(0,r.kt)("p",null,"Log messages are then shown in the ",(0,r.kt)("strong",{parentName:"p"},"Debug")," view of the ",(0,r.kt)("strong",{parentName:"p"},"Output")," window of your IDE. For example, with verbose logging enabled:"),(0,r.kt)("img",{src:o,alt:""}),(0,r.kt)("p",null,"If you want to re-route these messages to different location, you can use the methods on the ",(0,r.kt)("inlineCode",{parentName:"p"},"System.Diagnostics.Trace")," component."),(0,r.kt)("h2",{id:"log-area"},"Log Area"),(0,r.kt)("p",null,"Each message from ",(0,r.kt)("em",{parentName:"p"},"Avalonia UI")," is assigned an area that can be used to filter the log. These are described by the members of ",(0,r.kt)("inlineCode",{parentName:"p"},"Avalonia.Logging.LogArea")," static class:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Property")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Binding")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Animations")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Visual")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Layout")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Control"))),(0,r.kt)("p",null,"You can restrict the log to a specific area, or areas by adding arguments of type ",(0,r.kt)("inlineCode",{parentName:"p"},"Avalonia.Logging.LogArea")," after the ",(0,r.kt)("inlineCode",{parentName:"p"},"LogEventLevel")," argument in the ",(0,r.kt)("inlineCode",{parentName:"p"},"LogToTrace")," call. For example, this will log only property and layout messages:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp"},"public static AppBuilder BuildAvaloniaApp()\n    => AppBuilder.Configure<App>()\n        .UsePlatformDetect()\n        .LogToTrace(LogEventLevel.Debug, LogArea.Property, LogArea.Layout);\n")))}d.isMDXComponent=!0}}]);