"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[35309],{34979:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>s,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var o=i(85893),t=i(11151);const a={id:"build-and-run-your-application-on-a-device",title:"Build and run your Application on a physical device"},d="Build and run your Application on a physical device",r={id:"guides/platforms/android/build-and-run-your-application-on-a-device",title:"Build and run your Application on a physical device",description:"To deploy and run the Application on a real Android device, make sure of the following:",source:"@site/docs/guides/platforms/android/build-and-run-your-application-on-a-device.md",sourceDirName:"guides/platforms/android",slug:"/guides/platforms/android/build-and-run-your-application-on-a-device",permalink:"/avalonia-docs/docs/guides/platforms/android/build-and-run-your-application-on-a-device",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/guides/platforms/android/build-and-run-your-application-on-a-device.md",tags:[],version:"current",frontMatter:{id:"build-and-run-your-application-on-a-device",title:"Build and run your Application on a physical device"},sidebar:"documentationSidebar",previous:{title:"Android",permalink:"/avalonia-docs/docs/guides/platforms/android/"},next:{title:"Build and run your Application on a Simulator",permalink:"/avalonia-docs/docs/guides/platforms/android/build-and-run-your-application-on-a-simulator"}},s={},l=[];function c(n){const e={code:"code",h1:"h1",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.a)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"build-and-run-your-application-on-a-physical-device",children:"Build and run your Application on a physical device"}),"\n",(0,o.jsx)(e.p,{children:"To deploy and run the Application on a real Android device, make sure of the following:"}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsx)(e.li,{children:"Have the Android version on the device match the supported or target versions in AndroidManifest.xml (if no versions are specified, assume that target version is latest, supported by Xamarin/MAUI),"}),"\n",(0,o.jsx)(e.li,{children:"Connect the device to development machine and enable USB Debugging in developer settings,"}),"\n",(0,o.jsx)(e.li,{children:'If default connection mode is "battery charging only", switch to MTP or another mode (otherwise ADB won\'t connect to the device),'}),"\n",(0,o.jsx)(e.li,{children:"Have matching Android SDK installed to the target SDK version in AndroidManifest.xml,"}),"\n"]}),"\n",(0,o.jsxs)(e.p,{children:["Deployment is done via running the ",(0,o.jsx)(e.code,{children:"dotnet run"})," command (if using console), or via the following setup (if using Visual Studio Code):"]}),"\n",(0,o.jsx)(e.p,{children:"tasks.json:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-json",children:'{\n\t"version": "2.0.0",\n\t"tasks": [\n\t\t{\n\t\t\t"label": "build-android",\n\t\t\t"command": "dotnet",\n\t\t\t"type": "process",\n\t\t\t"args": [\n\t\t\t\t"build",\n\t\t\t\t"--no-restore",\n\t\t\t\t"${workspaceFolder}/<ProjectName>.csproj",\n\t\t\t\t"-p:TargetFramework=net6.0-android",\n\t\t\t\t"-p:Configuration=Debug"\n\t\t\t],\n\t\t\t"problemMatcher": "$msCompile"\n\t\t}\n\t]\n}\n'})}),"\n",(0,o.jsxs)(e.p,{children:["where ",(0,o.jsx)(e.code,{children:"<ProjectName>"})," is your Android-specific Avalonia project name."]})]})}function u(n={}){const{wrapper:e}={...(0,t.a)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(c,{...n})}):c(n)}},11151:(n,e,i)=>{i.d(e,{Z:()=>r,a:()=>d});var o=i(67294);const t={},a=o.createContext(t);function d(n){const e=o.useContext(a);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:d(n.components),o.createElement(a.Provider,{value:e},n.children)}}}]);