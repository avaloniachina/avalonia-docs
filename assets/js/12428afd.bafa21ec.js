"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[87655],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var r=a.createContext({}),p=function(e){var t=a.useContext(r),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(r.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,r=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),m=s,h=d["".concat(r,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(h,l(l({ref:t},c),{},{components:n})):a.createElement(h,l({ref:t},c))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var r in t)hasOwnProperty.call(t,r)&&(i[r]=t[r]);i.originalType=e,i[d]="string"==typeof e?e:s,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},75359:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(87462),s=(n(67294),n(3905));const o={id:"headless-custom",title:"Manual Setup of Headless Platform"},l=void 0,i={unversionedId:"concepts/headless/headless-custom",id:"concepts/headless/headless-custom",title:"Manual Setup of Headless Platform",description:"This page explains an advanced usage scenario with the Headless platform.",source:"@site/docs/concepts/headless/headless-custom.md",sourceDirName:"concepts/headless",slug:"/concepts/headless/headless-custom",permalink:"/avalonia-docs/docs/next/concepts/headless/headless-custom",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/concepts/headless/headless-custom.md",tags:[],version:"current",frontMatter:{id:"headless-custom",title:"Manual Setup of Headless Platform"},sidebar:"documentationSidebar",previous:{title:"Headless Testing with NUnit",permalink:"/avalonia-docs/docs/next/concepts/headless/headless-nunit"},next:{title:"Routed Events",permalink:"/avalonia-docs/docs/next/concepts/input/routed-events"}},r={},p=[{value:"Install Packages",id:"install-packages",level:2},{value:"Setup Application",id:"setup-application",level:2},{value:"Run Headless Session",id:"run-headless-session",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,s.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("admonition",{type:"warning"},(0,s.kt)("p",{parentName:"admonition"},"This page explains an advanced usage scenario with the Headless platform.\nWe recommend using the ",(0,s.kt)("a",{parentName:"p",href:"/avalonia-docs/docs/next/concepts/headless/headless-xunit"},"XUnit")," or ",(0,s.kt)("a",{parentName:"p",href:"/avalonia-docs/docs/next/concepts/headless/headless-nunit"},"NUnit")," testing frameworks instead.")),(0,s.kt)("h2",{id:"install-packages"},"Install Packages"),(0,s.kt)("p",null,"To set up the Headless platform, you need to install two packages:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/Avalonia.Headless"},"Avalonia.Headless"),", which also includes Avalonia."),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.nuget.org/packages/Avalonia.Themes.Fluent"},"Avalonia.Themes.Fluent"),", as even headless controls need a theme.")),(0,s.kt)("admonition",{type:"tip"},(0,s.kt)("p",{parentName:"admonition"},"The Headless platform doesn't require any specific theme, and it is possible to swap FluentTheme with any other.")),(0,s.kt)("h2",{id:"setup-application"},"Setup Application"),(0,s.kt)("p",null,"As in any other Avalonia app, an ",(0,s.kt)("inlineCode",{parentName:"p"},"Application")," instance needs to be created, and themes need to be applied. When using the Headless platform, the setup is not much different from a regular Avalonia app and can mostly be reused."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-xml",metastring:"title=App.axaml",title:"App.axaml"},'<Application xmlns="https://github.com/avaloniaui"\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n             x:Class="Tests.App">\n  <Application.Styles>\n    <FluentTheme />\n  </Application.Styles>\n</Application>\n')),(0,s.kt)("p",null,"And the code:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"title=App.axaml.cs",title:"App.axaml.cs"},"using Avalonia;\nusing Avalonia.Headless;\n\npublic class App : Application\n{\n    public override void Initialize()\n    {\n        AvaloniaXamlLoader.Load(this);\n    }\n}\n")),(0,s.kt)("h2",{id:"run-headless-session"},"Run Headless Session"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"title=Program.cs",title:"Program.cs"},'using Avalonia.Controls;\nusing Avalonia.Headless;\n\n// Start Headless session passing Application type.\nusing var session = HeadlessUnitTestSession.StartNew(typeof(App));\n\n// Since the Headless session has its own thread internally, we need to dispatch actions there:\nawait session.Dispatch(() =>\n{\n    // Setup controls:\n    var textBox = new TextBox();\n    var window = new Window { Content = textBox };\n\n    // Open window:\n    window.Show();\n\n    // Focus text box:\n    textBox.Focus();\n\n    // Simulate text input:\n    window.KeyTextInput("Hello World");\n\n    // Assert:\n    if (textBox.Text != "Hello World")\n    {\n        throw new Exception("Assert");\n    }\n}, CancellationToken.None);\n')))}u.isMDXComponent=!0}}]);