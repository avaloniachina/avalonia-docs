"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[59636],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),d=u(n),m=l,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,i=new Array(o);i[0]=m;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[d]="string"==typeof e?e:l,i[1]=a;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},43654:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var r=n(87462),l=(n(67294),n(3905));const o={description:"REFERENCE - Built-in Controls"},i="Auto-complete Box",a={unversionedId:"reference/controls/autocompletebox",id:"reference/controls/autocompletebox",title:"Auto-complete Box",description:"REFERENCE - Built-in Controls",source:"@site/docs/reference/controls/autocompletebox.md",sourceDirName:"reference/controls",slug:"/reference/controls/autocompletebox",permalink:"/avalonia-docs/docs/next/reference/controls/autocompletebox",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/reference/controls/autocompletebox.md",tags:[],version:"current",frontMatter:{description:"REFERENCE - Built-in Controls"},sidebar:"documentationSidebar",previous:{title:"Built-in Controls",permalink:"/avalonia-docs/docs/next/reference/controls/"},next:{title:"Button Controls",permalink:"/avalonia-docs/docs/next/reference/controls/buttons/"}},s={},u=[{value:"Useful Properties",id:"useful-properties",level:2},{value:"Examples",id:"examples",level:2},{value:"More Information",id:"more-information",level:2}],c={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,l.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"auto-complete-box"},"Auto-complete Box"),(0,l.kt)("p",null,"The auto-complete box presents a text box for user input and a drop-down that contains possible matches from an items source collection, for the text typed in. The drop-down shows when the user starts to type, and the match is updated for each character typed. The user can select from the drop-down."),(0,l.kt)("p",null,"The way in which the text is matched to possible items in the items source is configurable."," "),(0,l.kt)("h2",{id:"useful-properties"},"Useful Properties"),(0,l.kt)("p",null,"You will probably use these properties most often:"),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{width:"233"},"Property"),(0,l.kt)("th",null,"Description"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"Items")),(0,l.kt)("td",null,"The list of items to match from. ")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"FilterMode")),(0,l.kt)("td",null,"Option for how the matching is to be done. See table below.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"AsyncPopulator")),(0,l.kt)("td",null,"An asynchronous function that can can provide the list of matches for a given (string) criteria. This ")))),(0,l.kt)("p",null,"These are the options for the filter mode property:"),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",{width:"350"},"Filter Mode"),(0,l.kt)("th",null,"Description"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"StartsWith")),(0,l.kt)("td",null,"A culture-sensitive, case-insensitive filter where the returned items start with the specified text.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"StartsWithCaseSensitive")),(0,l.kt)("td",null,"A culture-sensitive, case-sensitive filter where the returned items start with the specified text.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"StartsWithOrdinal")),(0,l.kt)("td",null,"An ordinal, case-insensitive filter where the returned items start with the specified text.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"StartsWithOrdinalCaseSensitive")),(0,l.kt)("td",null,"An ordinal, case-sensitive filter where the returned items start with the specified text.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"Contains")),(0,l.kt)("td",null,"A culture-sensitive, case-insensitive filter where the returned items contain the specified text.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"ContainsCaseSensitive")),(0,l.kt)("td",null,"A culture-sensitive, case-sensitive filter where the returned items contain the specified text.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"ContainsOrdinal")),(0,l.kt)("td",null,"An ordinal, case-insensitive filter where the returned items contain the specified text.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"ContainsOrdinalCaseSensitive")),(0,l.kt)("td",null,"An ordinal, case-sensitive filter where the returned items contain the specified text.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"Equals")),(0,l.kt)("td",null,"A culture-sensitive, case-insensitive filter where the returned items equal the specified text.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"EqualsCaseSensitive")),(0,l.kt)("td",null,"A culture-sensitive, case-sensitive filter where the returned items equal the specified text.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"EqualsOrdinal")),(0,l.kt)("td",null,"An ordinal, case-insensitive filter where the returned items equal the specified text.")),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("code",null,"EqualsOrdinalCaseSensitive")),(0,l.kt)("td",null,"An ordinal, case-sensitive filter where the returned items equal the specified text.")))),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"In an ",(0,l.kt)("strong",{parentName:"p"},"ordinal")," string comparison, each character is compared using its simple byte value (independent of language).")),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("p",null,"This example has a fixed items source (array) that is set in the C# code-behind."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-xml"},'<StackPanel Margin="20">\n  <TextBlock Margin="0 5">Choose an animal:</TextBlock>\n  <AutoCompleteBox x:Name="animals" FilterMode="StartsWith" />\n</StackPanel>\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"title='C#'",title:"'C#'"},'using Avalonia.Controls;\nusing System.Linq;\n\nnamespace AvaloniaControls.Views\n{\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n            animals.Items = new string[] \n                {"cat", "camel", "cow", "chameleon", "mouse", "lion", "zebra" }\n            .OrderBy(x=>x);\n        }\n    }\n}\n')),(0,l.kt)("img",{src:"/img/gitbook-import/assets/autocomplete.gif",alt:""}),(0,l.kt)("h2",{id:"more-information"},"More Information"),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"For the complete API documentation about this control, see ",(0,l.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/AutoCompleteBox/"},"here"),".")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"View the source code on ",(0,l.kt)("em",{parentName:"p"},"GitHub")," ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/AutoCompleteBox/AutoCompleteBox.cs"},(0,l.kt)("inlineCode",{parentName:"a"},"AutoCompleteBox.cs")))))}p.isMDXComponent=!0}}]);