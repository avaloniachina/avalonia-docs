"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[67410],{5428:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var n=a(85893),o=a(11151);const s={description:"GUIDES - WPF Conversion"},i="Data Templates",l={id:"get-started/wpf/datatemplates",title:"Data Templates",description:"GUIDES - WPF Conversion",source:"@site/docs/get-started/wpf/datatemplates.md",sourceDirName:"get-started/wpf",slug:"/get-started/wpf/datatemplates",permalink:"/avalonia-docs/docs/get-started/wpf/datatemplates",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/get-started/wpf/datatemplates.md",tags:[],version:"current",frontMatter:{description:"GUIDES - WPF Conversion"},sidebar:"documentationSidebar",previous:{title:"Styling",permalink:"/avalonia-docs/docs/get-started/wpf/styling"},next:{title:"HierarchicalDataTemplate",permalink:"/avalonia-docs/docs/get-started/wpf/hierarchicaldatatemplate"}},r={},d=[{value:"Data Template Selector",id:"data-template-selector",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"data-templates",children:"Data Templates"}),"\n",(0,n.jsxs)(t.p,{children:["In Avalonia UI, data templates are not stored in the application resources. (The same is true of styles - see ",(0,n.jsx)(t.a,{href:"styling",children:"here"}),".)"]}),"\n",(0,n.jsxs)(t.p,{children:["Instead, data templates are placed either inside a ",(0,n.jsx)(t.code,{children:"DataTemplates"})," collection in a control, or inside the  (and on ",(0,n.jsx)(t.code,{children:"Application"}),"):"]}),"\n",(0,n.jsxs)(t.p,{children:["For example, this code adds a data template to display the view model class ",(0,n.jsx)(t.code,{children:"MyViewModel"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-markup",children:'<UserControl xmlns:viewmodels="using:MyApp.ViewModels"\n             x:DataType="viewmodels:ControlViewModel">\n    <UserControl.DataTemplates>\n        <DataTemplate DataType="viewmodels:FooViewModel">\n            <Border Background="Red" CornerRadius="8">\n                <TextBox Text="{Binding Name}"/>\n            </Border>\n        </DataTemplate>\n    </UserControl.DataTemplates>\n    \x3c!-- Assuming that ControlViewModel.Foo is an object of type\n         MyApp.ViewModels.FooViewModel then a red border with a corner\n         radius of 8 containing a TextBox will be displayed here.\n         DataType is required only if you use Compiled Bindings, so it can be type-checked.  --\x3e\n    <ContentControl Content="{Binding Foo}"/>\n<UserControl>\n'})}),"\n",(0,n.jsxs)(t.p,{children:["Data templates in Avalonia can also target interfaces and derived classes (which cannot be done in WPF) and so the order of ",(0,n.jsx)(t.code,{children:"DataTemplate"}),"s can be important: ",(0,n.jsx)(t.code,{children:"DataTemplate"}),"s within the same collection are evaluated in declaration order so you need to place them from most-specific to least-specific as you would in code."]}),"\n",(0,n.jsx)(t.h2,{id:"data-template-selector",children:"Data Template Selector"}),"\n",(0,n.jsxs)(t.p,{children:["In WPF you can create a ",(0,n.jsx)(t.code,{children:"DataTemplateSelector"})," to select or create a ",(0,n.jsx)(t.code,{children:"DataTemplate"})," based on the provided data. In Avalonia you cannot do this; but you can implement ",(0,n.jsx)(t.code,{children:"IDataTemplate"})," which can be seen as a good replacement for the ",(0,n.jsx)(t.code,{children:"DataTemplateSelector"}),". Please find a sample ",(0,n.jsx)(t.a,{href:"https://github.com/AvaloniaUI/Avalonia.Samples/tree/main/src/Avalonia.Samples/DataTemplates/IDataTemplateSample",children:"here"}),"."]})]})}function p(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},11151:(e,t,a)=>{a.d(t,{Z:()=>l,a:()=>i});var n=a(67294);const o={},s=n.createContext(o);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);