"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[57886],{79916:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>a,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=t(85893),s=t(11151);const o={description:"REFERENCE - Gestures"},i="PullGestureRecognizer",l={id:"reference/gestures/pullgesturerecognizer",title:"PullGestureRecognizer",description:"REFERENCE - Gestures",source:"@site/docs/reference/gestures/pullgesturerecognizer.md",sourceDirName:"reference/gestures",slug:"/reference/gestures/pullgesturerecognizer",permalink:"/avalonia-docs/docs/reference/gestures/pullgesturerecognizer",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/reference/gestures/pullgesturerecognizer.md",tags:[],version:"current",frontMatter:{description:"REFERENCE - Gestures"},sidebar:"documentationSidebar",previous:{title:"PinchGestureRecognizer",permalink:"/avalonia-docs/docs/reference/gestures/pinchgesturerecognizer"},next:{title:"ScrollGestureRecognizer",permalink:"/avalonia-docs/docs/reference/gestures/scrollgesturerecognizer"}},c={},u=[{value:"Using a PullGestureRecognizer",id:"using-a-pullgesturerecognizer",level:2},{value:"PullDirection",id:"pulldirection",level:3},{value:"Useful Properties",id:"useful-properties",level:2},{value:"More Information",id:"more-information",level:2}];function d(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"pullgesturerecognizer",children:"PullGestureRecognizer"}),"\n",(0,n.jsxs)(r.p,{children:["A gesture recognizer that tracks a pull gesture. A pull gesture occurs when a pointer is dragged from the edge of a control. The direction of the pull is defined by the ",(0,n.jsx)(r.code,{children:"PullDirection"})," property."]}),"\n",(0,n.jsx)(r.h2,{id:"using-a-pullgesturerecognizer",children:"Using a PullGestureRecognizer"}),"\n",(0,n.jsxs)(r.p,{children:["A PullGestureRecognizer can be attached to a control using the control's ",(0,n.jsx)(r.code,{children:"GestureRecognizers"})," property."]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-xml",children:'<Border Width="500"\n        Height="500"\n        Margin="5"\n        Name="border">\n  <Border.GestureRecognizers>\n    <PullGestureRecognizer PullDirection="TopToBottom"/>\n  </Border.GestureRecognizers>\n</Border>\n'})}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-csharp",metastring:"title='C#'",children:"border.GestureRecognizers.Add(new PullGestureRecognizer()\n            {\n                PullDirection = PullDirection.TopToBottom,\n            });\n"})}),"\n",(0,n.jsxs)(r.p,{children:["The PullGestureRegonizer raises a ",(0,n.jsx)(r.code,{children:"Gestures.PullGestureEvent"})," when it detects the start of a pull gesture. When the pull ends, from the pointer being released or another gesture start, it raises a ",(0,n.jsx)(r.code,{children:"Gestures.PullGestureEndedEvent"}),"."]}),"\n",(0,n.jsx)(r.h3,{id:"pulldirection",children:"PullDirection"}),"\n",(0,n.jsx)(r.p,{children:"This defines the direction of the pull. There are 4 available values;"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"PullDirection.TopToBottom"})," : Pull starts from the top edge and moves towards the buttom"]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"PullDirection.BottomToTop"})," : Pull starts from the bottom edge and moves towards the top"]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"PullDirection.LeftToRight"})," : Pull starts from the left edge and moves towards the right"]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:"PullDirection.RightToLeft"})," : Pull starts from the right edge and moves towards the top"]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"useful-properties",children:"Useful Properties"}),"\n",(0,n.jsx)(r.p,{children:"You will probably use these properties most often:"}),"\n",(0,n.jsxs)("table",{children:[(0,n.jsx)("thead",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("th",{width:"266",children:"Property"}),(0,n.jsx)("th",{children:"Description"})]})}),(0,n.jsx)("tbody",{children:(0,n.jsxs)("tr",{children:[(0,n.jsx)("td",{children:"PullDirection"}),(0,n.jsx)("td",{children:"Defines the direction of the pull gesture. "})]})})]}),"\n",(0,n.jsx)(r.h2,{id:"more-information",children:"More Information"}),"\n",(0,n.jsxs)(r.admonition,{type:"info",children:[(0,n.jsxs)(r.p,{children:["View the source code on ",(0,n.jsx)(r.em,{children:"GitHub"})]}),(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Base/Input/GestureRecognizers/PullGestureRecognizer.cs",children:(0,n.jsx)(r.code,{children:"PullGestureRecognizer.cs"})})}),(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Base/Input/PullGestureEventArgs.cs",children:(0,n.jsx)(r.code,{children:"PullGestureEventArgs.cs"})})})]})]})}function a(e={}){const{wrapper:r}={...(0,s.a)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},11151:(e,r,t)=>{t.d(r,{Z:()=>l,a:()=>i});var n=t(67294);const s={},o=n.createContext(s);function i(e){const r=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:r},e.children)}}}]);