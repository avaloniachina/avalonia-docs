"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[54614],{43363:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var a=n(85893),o=n(11151),i=n(73992),r=n(18679);const l={id:"the-model-view-viewmodel-pattern-mvvm",title:"The Model-View-ViewModel Pattern"},s=void 0,d={id:"getting-started/programming-with-avalonia/the-model-view-viewmodel-pattern-mvvm",title:"The Model-View-ViewModel Pattern",description:"As well as writing code in code-behind, Avalonia supports using the Model-View-ViewModel pattern \\(or MVVM\\). MVVM is a common way to structure UI applications that separates view logic from application logic in a way that allows your applications to become unit-testable.",source:"@site/versioned_docs/version-0.10.x/getting-started/programming-with-avalonia/the-model-view-viewmodel-pattern-mvvm.md",sourceDirName:"getting-started/programming-with-avalonia",slug:"/getting-started/programming-with-avalonia/the-model-view-viewmodel-pattern-mvvm",permalink:"/avalonia-docs/docs/0.10.x/getting-started/programming-with-avalonia/the-model-view-viewmodel-pattern-mvvm",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/getting-started/programming-with-avalonia/the-model-view-viewmodel-pattern-mvvm.md",tags:[],version:"0.10.x",frontMatter:{id:"the-model-view-viewmodel-pattern-mvvm",title:"The Model-View-ViewModel Pattern"},sidebar:"documentationSidebar",previous:{title:"Programming with Avalonia",permalink:"/avalonia-docs/docs/0.10.x/getting-started/programming-with-avalonia/"},next:{title:"Controls & Layouts",permalink:"/avalonia-docs/docs/0.10.x/getting-started/programming-with-avalonia/controls-and-layouts"}},c={},u=[];function h(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["As well as writing code in code-behind, Avalonia supports using the ",(0,a.jsx)(t.a,{href:"../../guides/basics/mvvm",children:"Model-View-ViewModel"})," pattern (or MVVM). MVVM is a common way to structure UI applications that separates view logic from application logic in a way that allows your applications to become unit-testable."]}),"\n",(0,a.jsxs)(t.p,{children:["MVVM relies upon Avalonia's ",(0,a.jsx)(t.a,{href:"../../data-binding/bindings",children:"binding"})," capabilities to separate your application into a View layer which displays standard Avalonia windows and controls, and a ViewModel layer which defines the functionality of the application independently of Avalonia itself."]}),"\n",(0,a.jsx)(t.p,{children:"The following example shows the code from the previous example implemented using the MVVM pattern:"}),"\n",(0,a.jsxs)(i.Z,{defaultValue:"xaml",values:[{label:"XAML",value:"xaml"},{label:"C#",value:"cs"}],children:[(0,a.jsx)(r.Z,{value:"xaml",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-xml",children:'<Window xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n        x:Class="AvaloniaApplication1.MainWindow"\n        Title="Window with Button"\n        Width="250" Height="100">\n\n  \x3c!-- Add button to window --\x3e\n  <Button Content="{Binding ButtonText}" Command="{Binding ButtonClicked}"/>\n</Window>\n'})})}),(0,a.jsx)(r.Z,{value:"cs",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-cs",children:'using System.ComponentModel;\nusing Avalonia.Controls;\nusing Avalonia.Markup.Xaml;\n\nnamespace AvaloniaApplication1\n{\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n            DataContext = new MainWindowViewModel();\n        }\n    }\n\n    public class MainWindowViewModel : INotifyPropertyChanged\n    {\n        string buttonText = "Click Me!";\n\n        public string ButtonText\n        {\n            get => buttonText;\n            set \n            {\n                buttonText = value;\n                PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(nameof(ButtonText)));\n            }\n        }\n\n        public event PropertyChangedEventHandler PropertyChanged;\n\n        public void ButtonClicked() => ButtonText = "Hello, Avalonia!";\n    }\n}\n'})})})]}),"\n",(0,a.jsxs)(t.p,{children:["In this example, the code-behind assigns the ",(0,a.jsx)(t.code,{children:"Window"}),"'s ",(0,a.jsx)(t.a,{href:"../../data-binding/the-datacontext",children:(0,a.jsx)(t.code,{children:"DataContext"})})," property to an instance of ",(0,a.jsx)(t.code,{children:"MainWindowViewModel"}),". The XAML then uses an Avalonia ",(0,a.jsx)(t.a,{href:"../../data-binding/bindings",children:(0,a.jsx)(t.code,{children:"{Binding}"})})," to bind the ",(0,a.jsx)(t.code,{children:"Button"}),"'s ",(0,a.jsx)(t.code,{children:"Content"})," property to the ",(0,a.jsx)(t.code,{children:"ButtonText"})," property on the ",(0,a.jsx)(t.code,{children:"MainWindowViewModel"}),". It also binds the ",(0,a.jsx)(t.code,{children:"Button"}),"'s ",(0,a.jsx)(t.a,{href:"../../data-binding/binding-to-commands",children:(0,a.jsx)(t.code,{children:"Command"})})," property to the ",(0,a.jsx)(t.code,{children:"ButtonClicked"})," method on the ",(0,a.jsx)(t.code,{children:"MainWindowViewModel"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["When the ",(0,a.jsx)(t.code,{children:"Button"})," is clicked it invokes its ",(0,a.jsx)(t.code,{children:"Command"}),", causing the bound ",(0,a.jsx)(t.code,{children:"MainWindowViewModel.ButtonClicked"})," method to be called. This method then sets the ",(0,a.jsx)(t.code,{children:"ButtonText"})," property which raises the ",(0,a.jsx)(t.code,{children:"INotifyPropertyChanged.PropertyChanged"})," event, causing the ",(0,a.jsx)(t.code,{children:"Button"})," to re-read its bound value and update the UI."]})]})}function p(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},18679:(e,t,n)=>{n.d(t,{Z:()=>r});n(67294);var a=n(90512);const o={tabItem:"tabItem_Ymn6"};var i=n(85893);function r(e){let{children:t,hidden:n,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,r),hidden:n,children:t})}},73992:(e,t,n)=>{n.d(t,{Z:()=>V});var a=n(67294),o=n(90512),i=n(72957),r=n(16550),l=n(81270),s=n(75238),d=n(33609),c=n(92560);function u(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return u(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}(n);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const o=(0,r.k6)(),i=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,s._X)(i),(0,a.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(o.location.search);t.set(i,e),o.replace({...o.location,search:t.toString()})}),[i,o])]}function v(e){const{defaultValue:t,queryString:n=!1,groupId:o}=e,i=h(e),[r,s]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:i}))),[d,u]=m({queryString:n,groupId:o}),[v,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[o,i]=(0,c.Nk)(n);return[o,(0,a.useCallback)((e=>{n&&i.set(e)}),[n,i])]}({groupId:o}),w=(()=>{const e=d??v;return p({value:e,tabValues:i})?e:null})();(0,l.Z)((()=>{w&&s(w)}),[w]);return{selectedValue:r,selectValue:(0,a.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),g(e)}),[u,g,i]),tabValues:i}}var g=n(51048);const w={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(85893);function f(e){let{className:t,block:n,selectedValue:a,selectValue:r,tabValues:l}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),c=e=>{const t=e.currentTarget,n=s.indexOf(t),o=l[n].value;o!==a&&(d(t),r(o))},u=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=s.indexOf(e.currentTarget)+1;t=s[n]??s[0];break}case"ArrowLeft":{const n=s.indexOf(e.currentTarget)-1;t=s[n]??s[s.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t),children:l.map((e=>{let{value:t,label:n,attributes:i}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:a===t?0:-1,"aria-selected":a===t,ref:e=>s.push(e),onKeyDown:u,onClick:c,...i,className:(0,o.Z)("tabs__item",w.tabItem,i?.className,{"tabs__item--active":a===t}),children:n??t},t)}))})}function x(e){let{lazy:t,children:n,selectedValue:o}=e;const i=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===o));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function y(e){const t=v(e);return(0,b.jsxs)("div",{className:(0,o.Z)("tabs-container",w.tabList),children:[(0,b.jsx)(f,{...e,...t}),(0,b.jsx)(x,{...e,...t})]})}function V(e){const t=(0,g.Z)();return(0,b.jsx)(y,{...e,children:u(e.children)},String(t))}},11151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>r});var a=n(67294);const o={},i=a.createContext(o);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);