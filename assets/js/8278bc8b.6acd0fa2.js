"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[74009],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=r,h=m["".concat(d,".").concat(u)]||m[u]||c[u]||o;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},42207:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=n(87462),r=(n(67294),n(3905));const o={description:"REFERENCE - Built-in Controls"},i="Data Grid Columns",l={unversionedId:"reference/controls/datagrid/datagridcolumns",id:"reference/controls/datagrid/datagridcolumns",title:"Data Grid Columns",description:"REFERENCE - Built-in Controls",source:"@site/docs/reference/controls/datagrid/datagridcolumns.md",sourceDirName:"reference/controls/datagrid",slug:"/reference/controls/datagrid/datagridcolumns",permalink:"/avalonia-docs/docs/next/reference/controls/datagrid/datagridcolumns",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/reference/controls/datagrid/datagridcolumns.md",tags:[],version:"current",frontMatter:{description:"REFERENCE - Built-in Controls"},sidebar:"documentationSidebar",previous:{title:"Data Grid",permalink:"/avalonia-docs/docs/next/reference/controls/datagrid/"},next:{title:"Date Picker",permalink:"/avalonia-docs/docs/next/reference/controls/datepicker"}},d={},s=[{value:"Useful Properties",id:"useful-properties",level:2},{value:"Column Width",id:"column-width",level:2},{value:"More Information",id:"more-information",level:2}],p={toc:s},m="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data-grid-columns"},"Data Grid Columns"),(0,r.kt)("p",null,"A data grid can contain multiple data grid columns and ",(0,r.kt)("em",{parentName:"p"},"Avalonia UI")," has two built-in column types which can be used to display a different data types, and a template type that can customise the column appearance."," "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Column Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"DataGridTextColumn")),(0,r.kt)("td",{parentName:"tr",align:null},"Presents a text box for display and editing of the column data. You can control font properties like family and size in this column type.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"DataGridCheckBoxColumn")),(0,r.kt)("td",{parentName:"tr",align:null},"Presents a check box for display and editing of the column data, when it is Boolean. This column type also supports the three-state check box when the value is nullable.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"DataGridTemplateColumn")),(0,r.kt)("td",{parentName:"tr",align:null},"Can be used to customise the presentation of column data, for both display and editing.")))),(0,r.kt)("h2",{id:"useful-properties"},"Useful Properties"),(0,r.kt)("p",null,"Most of these properties are common to all three column types:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Header")),(0,r.kt)("td",{parentName:"tr",align:null},"The header content of the column.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"HeaderTemplate")),(0,r.kt)("td",{parentName:"tr",align:null},"Uses a data template for the column.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IsReadOnly")),(0,r.kt)("td",{parentName:"tr",align:null},"Whether the column is read-only. If the data grid itself is read-only, then the column is also read-only, whatever the value of this  property.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"IsThreeState")),(0,r.kt)("td",{parentName:"tr",align:null},"Check box column only. Enables the third (filled) state when a nullable Boolean value is null.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Width")),(0,r.kt)("td",{parentName:"tr",align:null},"The column width can be given in absolute or relative size (see below).")))),(0,r.kt)("h2",{id:"column-width"},"Column Width"),(0,r.kt)("p",null,"If you do not set the width for a column, it will be resized to fit the contents, and a horizontal scrollbar will be added to the grid if necessary."," "),(0,r.kt)("p",null,"You can set the width of a column absolutely, for example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<DataGridTextColumn Width="200" />\n')),(0,r.kt)("p",null,"This will cause the column content that does not fit to be hidden."),(0,r.kt)("p",null,"Alternatively, you can specify relative automatic sizes. This uses ","*"," to represent an equal division of the available width, and then multiples like 2","*",".  Any columns without a width specified are sized to their content."),(0,r.kt)("p",null,"For example to divide a data grid into 3 equal columns:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<DataGridTextColumn Width="*" />\n<DataGridTextColumn Width="*" />\n<DataGridTextColumn Width="*" />\n')),(0,r.kt)("p",null,"Example"),(0,r.kt)("p",null,"This example improves a data grid by expanding two columns equally across the width:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<Window ... >\n   <Design.DataContext>\n       <vm:MainWindowViewModel/>\n  </Design.DataContext>\n  <DataGrid Margin="20" ItemsSource="{Binding People}"\n          IsReadOnly="True"\n          GridLinesVisibility="All"\n          BorderThickness="1" BorderBrush="Gray">\n    <DataGrid.Columns>\n      <DataGridTextColumn Header="First Name" Width="*" \n              Binding="{Binding FirstName}"/>\n      <DataGridTextColumn Header="Last Name" Width="*" \n              Binding="{Binding LastName}" />\n    </DataGrid.Columns>\n  </DataGrid>\n</Window>\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"title='C# View Model'",title:"'C#",View:!0,"Model'":!0},'using AvaloniaControls.Models;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\nnamespace AvaloniaControls.ViewModels\n{\n    public class MainWindowViewModel : ViewModelBase\n    {\n        public ObservableCollection<Person> People { get; }\n\n        public MainWindowViewModel()\n        {\n            var people = new List<Person> \n            {\n                new Person("Neil", "Armstrong"),\n                new Person("Buzz", "Lightyear"),\n                new Person("James", "Kirk")\n            };\n            People = new ObservableCollection<Person>(people);\n        }\n    }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-csharp",metastring:"title='C# Item Class'",title:"'C#",Item:!0,"Class'":!0},"public class Person\n{\n    public string FirstName { get; set; }\n    public string LastName { get; set; }\n    \n    public Person(string firstName , string lastName)\n    {\n        FirstName = firstName;\n        LastName = lastName;\n    }\n}\n")),(0,r.kt)("p",null,"It works in the preview pane because the ",(0,r.kt)("inlineCode",{parentName:"p"},"<Design.DataContext>")," element creates a view model to bind to:"),(0,r.kt)("img",{src:"/img/gitbook-import/assets/image (4) (1).png",alt:""}),(0,r.kt)("h2",{id:"more-information"},"More Information"),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"For the complete API documentation about the data grid text column, see ",(0,r.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/DataGridTextColumn/"},"here"),".")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"For the complete API documentation about data grid check box column, see ",(0,r.kt)("a",{parentName:"p",href:"http://reference.avaloniaui.net/api/Avalonia.Controls/DataGridCheckBoxColumn/"},"here"),".")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"View the source code on ",(0,r.kt)("em",{parentName:"p"},"GitHub")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls.DataGrid/DataGridTextColumn.cs"},(0,r.kt)("inlineCode",{parentName:"a"},"DataGridTextColumn.cs")))),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"View the source code on ",(0,r.kt)("em",{parentName:"p"},"GitHub")," ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls.DataGrid/DataGridCheckBoxColumn.cs"},(0,r.kt)("inlineCode",{parentName:"a"},"DataGridCheckBoxColumn.cs")))))}c.isMDXComponent=!0}}]);