"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[43730],{36061:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var n=t(85893),l=t(11151);const o={id:"how-to-use-included-styles",title:"How to Use Included Styles"},i="How to Use Included Styles",r={id:"guides/styles-and-resources/how-to-use-included-styles",title:"How to Use Included Styles",description:"This guide shows you how to share styles from a separate styles file (that is included in your application). This approach allows you to share styles across multiple applications.",source:"@site/i18n/ru/docusaurus-plugin-content-docs/current/guides/styles-and-resources/how-to-use-included-styles.md",sourceDirName:"guides/styles-and-resources",slug:"/guides/styles-and-resources/how-to-use-included-styles",permalink:"/avalonia-docs/ru/docs/guides/styles-and-resources/how-to-use-included-styles",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/i18n/ru/docusaurus-plugin-content-docs/current/guides/styles-and-resources/how-to-use-included-styles.md",tags:[],version:"current",frontMatter:{id:"how-to-use-included-styles",title:"How to Use Included Styles"},sidebar:"documentationSidebar",previous:{title:"Property Setters",permalink:"/avalonia-docs/ru/docs/guides/styles-and-resources/property-setters"},next:{title:"How To Use Resources",permalink:"/avalonia-docs/ru/docs/guides/styles-and-resources/resources"}},a={},c=[];function d(e){const s={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.h1,{id:"how-to-use-included-styles",children:"How to Use Included Styles"}),"\n",(0,n.jsx)(s.p,{children:"This guide shows you how to share styles from a separate styles file (that is included in your application). This approach allows you to share styles across multiple applications."}),"\n",(0,n.jsxs)(s.p,{children:["To do this, you define styles in a new XAML file. Here, the root element must then be either a ",(0,n.jsx)(s.code,{children:"Style"})," or ",(0,n.jsx)(s.code,{children:"Styles"})," element. For example:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-markup",children:'<Styles xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">\n    <Style Selector="TextBlock.h1">\n        <Setter Property="FontSize" Value="24"/>\n        <Setter Property="FontWeight" Value="Bold"/>\n    </Style>\n</Styles>\n'})}),"\n",(0,n.jsx)(s.p,{children:"The _Avalonia U_I solution templates provide a quick way of adding a styles file to your project. Follow this procedure:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:["In the ",(0,n.jsx)(s.strong,{children:"Solution Explorer"}),", right-click your project."]}),"\n",(0,n.jsxs)(s.li,{children:["Click ",(0,n.jsx)(s.strong,{children:"Add"})," and ",(0,n.jsx)(s.strong,{children:"New Item"})]}),"\n",(0,n.jsxs)(s.li,{children:["From the Avalonia Items, click ",(0,n.jsx)(s.strong,{children:"Styles(Avalonia)"})]}),"\n",(0,n.jsx)(s.li,{children:"Type a name for your styles file"}),"\n"]}),"\n",(0,n.jsx)("img",{src:"/img/gitbook-import/assets/image (1) (4) (2).png",alt:""}),"\n",(0,n.jsxs)(s.p,{children:["To use the styles defined in a separate file, you must reference it using a ",(0,n.jsx)(s.code,{children:"StyleInclude"})," element. The source attribute defines the location of the styles file. You can choose the level at which to add this element."]}),"\n",(0,n.jsxs)(s.p,{children:["For example, to use styles defined in a file ",(0,n.jsx)(s.code,{children:"AppStyles.axaml"})," (saved in the folder ",(0,n.jsx)(s.code,{children:"/Styles"}),"), you could write a a ",(0,n.jsx)(s.code,{children:"StyleInclude"})," element in the window like this:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-markup",children:'<Window ... >\n    <Window.Styles>\n        <StyleInclude Source="/Styles/AppStyles.axaml" />\n    </Window.Styles>\n\n    <StackPanel>\n       <TextBlock Classes="h1">Heading 1</TextBlock>\n       <TextBlock>This is not a heading and will not be changed.</TextBlock>\n    </StackPanel>\n</Window>\n'})}),"\n",(0,n.jsxs)(s.p,{children:["However, it is more common to reference a styles file in the ",(0,n.jsx)(s.code,{children:"App.axaml"})," file like this:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-xml",children:'<Application... > \n    <Application.Styles>\n        <FluentTheme Mode="Light"/>\n        <StyleInclude Source="/AppStyles.axaml"/>\n    </Application.Styles>\n</Application>\n'})}),"\n",(0,n.jsx)(s.p,{children:"This will allow you to use the styles from the separate file throughout your application."}),"\n",(0,n.jsxs)(s.p,{children:["You can also include styles from a another assembly by using the ",(0,n.jsx)(s.code,{children:"avares://"})," prefix:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-xml",children:'<Application... > \n    <Application.Styles>\n        <FluentTheme Mode="Light"/>\n        <StyleInclude Source="avares://MyApp.Shared/Styles/CommonAppStyles.axaml"/>\n    </Application.Styles>\n</Application>\n'})}),"\n",(0,n.jsxs)(s.p,{children:["will reference the ",(0,n.jsx)(s.code,{children:"/Styles/CommonAppStyles.axaml"})," file from the ",(0,n.jsx)(s.code,{children:"MyApp.Shared"})," project."]})]})}function u(e={}){const{wrapper:s}={...(0,l.a)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},11151:(e,s,t)=>{t.d(s,{Z:()=>r,a:()=>i});var n=t(67294);const l={},o=n.createContext(l);function i(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);