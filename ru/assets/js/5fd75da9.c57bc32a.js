"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[87090],{44994:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var o=t(85893),a=t(11151);const r={description:"CONCEPTS - Input"},i="Keyboard and Hotkeys",s={id:"concepts/input/hotkeys",title:"Keyboard and Hotkeys",description:"CONCEPTS - Input",source:"@site/i18n/ru/docusaurus-plugin-content-docs/current/concepts/input/hotkeys.md",sourceDirName:"concepts/input",slug:"/concepts/input/hotkeys",permalink:"/avalonia-docs/ru/docs/concepts/input/hotkeys",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/i18n/ru/docusaurus-plugin-content-docs/current/concepts/input/hotkeys.md",tags:[],version:"current",frontMatter:{description:"CONCEPTS - Input"},sidebar:"documentationSidebar",previous:{title:"Gestures",permalink:"/avalonia-docs/ru/docs/concepts/input/gestures"},next:{title:"The Main Window",permalink:"/avalonia-docs/ru/docs/concepts/the-main-window"}},c={},d=[{value:"Keys and Modifiers",id:"keys-and-modifiers",level:2},{value:"Reference",id:"reference",level:3},{value:"Source code",id:"source-code",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"keyboard-and-hotkeys",children:"Keyboard and Hotkeys"}),"\n",(0,o.jsxs)(n.p,{children:["Various Controls that implement ",(0,o.jsx)(n.code,{children:"ICommandSource"})," have a ",(0,o.jsx)(n.code,{children:"HotKey"})," property that you can set or bind to. Pressing the hotkey will execute the command ",(0,o.jsx)(n.a,{href:"../../basics/user-interface/adding-interactivity#commands",children:"bound"})," to the Control."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markup",children:'<Menu>\n    <MenuItem Header="_File">\n        <MenuItem x:Name="SaveMenuItem" Header="_Save" Command="{Binding SaveCommand}" HotKey="Ctrl+S"/>\n    </MenuItem>\n</Menu>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["You can also use the static methods of the ",(0,o.jsx)(n.code,{children:"HotKeyManager"})," class to set and get hotkeys from code:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"InitializeComponent();\nHotKeyManager.SetHotKey(saveMenuItem, new KeyGesture(Key.S, KeyModifiers.Control));\n"})}),"\n",(0,o.jsx)(n.h2,{id:"keys-and-modifiers",children:"Keys and Modifiers"}),"\n",(0,o.jsxs)(n.p,{children:["A Hotkey must have one ",(0,o.jsx)(n.a,{href:"http://reference.avaloniaui.net/api/Avalonia.Input/Key/",children:"Key"})," and zero or more ",(0,o.jsx)(n.a,{href:"http://reference.avaloniaui.net/api/Avalonia.Input/KeyModifiers/",children:"KeyModifiers"}),". When setting a Hotkey in XAML using the ",(0,o.jsx)(n.code,{children:"HotKey"})," property, the string will be parsed as a ",(0,o.jsx)(n.a,{href:"http://reference.avaloniaui.net/api/Avalonia.Input/KeyGesture/",children:"KeyGesture"}),". ",(0,o.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.enum.parse",children:"Enum.Parse"})," is used to parse the key and modifiers but synonyms like ",(0,o.jsx)(n.code,{children:"Ctrl"})," instead of ",(0,o.jsx)(n.code,{children:"Control"})," or ",(0,o.jsx)(n.code,{children:"Win"})," instead of ",(0,o.jsx)(n.code,{children:"Meta"})," can be used."]}),"\n",(0,o.jsx)(n.h3,{id:"reference",children:"Reference"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"http://reference.avaloniaui.net/api/Avalonia.Controls/HotKeyManager/",children:"HotKeyManager"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"http://reference.avaloniaui.net/api/Avalonia.Input/KeyGesture/",children:"KeyGesture"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"http://reference.avaloniaui.net/api/Avalonia.Input/KeyModifiers/",children:"KeyModifiers"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"http://reference.avaloniaui.net/api/Avalonia.Input/Key/",children:"Key"})}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"source-code",children:"Source code"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/HotkeyManager.cs",children:"HotkeyManager.cs"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Input/KeyGesture.cs",children:"KeyGesture.cs"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>s,a:()=>i});var o=t(67294);const a={},r=o.createContext(a);function i(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);