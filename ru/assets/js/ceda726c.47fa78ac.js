"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[18494],{25459:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var r=t(85893),a=t(11151);const o={info:"propertychangedcallback",title:"PropertyChangedCallback"},s=void 0,c={id:"wpf-developer-tips/propertychangedcallback",title:"PropertyChangedCallback",description:"Listening to changes on DependencyProperties in WPF can be complex. When you register a DependencyProperty you can supply a static PropertyChangedCallback but if you want to listen to changes from elsewhere things can get complicated and error-prone.",source:"@site/i18n/ru/docusaurus-plugin-content-docs/version-0.10.x/wpf-developer-tips/propertychangedcallback.md",sourceDirName:"wpf-developer-tips",slug:"/wpf-developer-tips/propertychangedcallback",permalink:"/avalonia-docs/ru/docs/0.10.x/wpf-developer-tips/propertychangedcallback",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/i18n/ru/docusaurus-plugin-content-docs/version-0.10.x/wpf-developer-tips/propertychangedcallback.md",tags:[],version:"0.10.x",frontMatter:{info:"propertychangedcallback",title:"PropertyChangedCallback"},sidebar:"documentationSidebar",previous:{title:"Class Handlers",permalink:"/avalonia-docs/ru/docs/0.10.x/wpf-developer-tips/class-handlers"},next:{title:"RenderTransforms and RenderTransformOrigin",permalink:"/avalonia-docs/ru/docs/0.10.x/wpf-developer-tips/rendertransforms-and-rendertransformorigin"}},i={},d=[];function l(e){const n={a:"a",code:"code",p:"p",pre:"pre",strong:"strong",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["Listening to changes on DependencyProperties in WPF can be complex. When you register a ",(0,r.jsx)(n.code,{children:"DependencyProperty"})," you can supply a static ",(0,r.jsx)(n.code,{children:"PropertyChangedCallback"})," but if you want to listen to changes from elsewhere ",(0,r.jsx)(n.a,{href:"https://stackoverflow.com/questions/23682232",children:"things can get complicated and error-prone"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["In Avalonia, there is no ",(0,r.jsx)(n.code,{children:"PropertyChangedCallback"})," at the time of registration, instead a class listener is ",(0,r.jsx)(n.a,{href:"../data-binding/binding-from-code#subscribing-to-a-property-on-any-object",children:"added to the control's static constructor in much the same way that event class listeners are added"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["As side effect of this change, you may need to dispatch events yourself.\n",(0,r.jsx)(n.strong,{children:"WPF"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"treeView.SelectedItemChanged += TreeView_SelectedItemChanged;\n\n// ...\n\nprivate void TreeView_SelectedItemChanged(object sender, RoutedPropertyChangedEventArgs<object> e)\n{\n    var item = treeView.SelectedItem;\n    // work with selected item.\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Avalonia"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"treeView.PropertyChanged += TreeView_SelectedItemChanged;\n\n// ...\n\nprivate void TreeView_SelectedItemChanged(object sender, AvaloniaPropertyChangedEventArgs e)\n{\n    if (e.Property != TreeView.SelectedItemProperty) return;\n\n    var item = treeView.SelectedItem;\n    // work with selected item.\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Even plain text box should be handled in same way.\n",(0,r.jsx)(n.strong,{children:"WPF"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"searchTextBox.TextChanged += new TextChangedEventHandler(searchTextBox_TextChanged);\n\nprivate void searchTextBox_TextChanged(object sender, TextChangedEventArgs e)\n{\n    // handle text change\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Avalonia"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"searchTextBox.PropertyChanged += searchTextBox_TextChanged;\n\n// ...\n\nprivate void searchTextBox_TextChanged(object sender, AvaloniaPropertyChangedEventArgs e)\n{\n    if (e.Property != TextBox.TextProperty) return;\n\n    // handle text change\n}\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var r=t(67294);const a={},o=r.createContext(a);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);