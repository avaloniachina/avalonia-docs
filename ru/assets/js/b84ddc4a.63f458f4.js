"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[32953],{95179:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=o(85893),r=o(11151);const s=o.p+"assets/images/image (3)-f80ba24e1ba46657837e049f5e51c940.png",a={id:"logging-errors-and-warnings",title:"How To Log Errors and Warnings"},t="How To Log Errors and Warnings",l={id:"guides/implementation-guides/logging-errors-and-warnings",title:"How To Log Errors and Warnings",description:"This guide shows you how to can log warnings and errors in Avalonia UI using the standard (Microsoft)System.Diagnostics.Trace component.",source:"@site/i18n/ru/docusaurus-plugin-content-docs/current/guides/implementation-guides/logging-errors-and-warnings.md",sourceDirName:"guides/implementation-guides",slug:"/guides/implementation-guides/logging-errors-and-warnings",permalink:"/avalonia-docs/ru/docs/guides/implementation-guides/logging-errors-and-warnings",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/i18n/ru/docusaurus-plugin-content-docs/current/guides/implementation-guides/logging-errors-and-warnings.md",tags:[],version:"current",frontMatter:{id:"logging-errors-and-warnings",title:"How To Log Errors and Warnings"},sidebar:"documentationSidebar",previous:{title:"Developer Tools",permalink:"/avalonia-docs/ru/docs/guides/implementation-guides/developer-tools"},next:{title:"How To Use Live Preview",permalink:"/avalonia-docs/ru/docs/guides/implementation-guides/ide-support"}},c={},d=[{value:"Log Area",id:"log-area",level:2}];function g(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"how-to-log-errors-and-warnings",children:"How To Log Errors and Warnings"}),"\n",(0,i.jsxs)(n.p,{children:["This guide shows you how to can log warnings and errors in ",(0,i.jsx)(n.em,{children:"Avalonia UI"})," using the standard ",(0,i.jsx)(n.em,{children:"(Microsoft)"}),(0,i.jsx)(n.code,{children:"System.Diagnostics.Trace"})," component."]}),"\n",(0,i.jsxs)(n.p,{children:["The code to achieve logging is added to your project by the ",(0,i.jsx)(n.em,{children:"Avalonia UI"})," solution templates if you use them."]}),"\n",(0,i.jsx)(n.p,{children:"To enable, or to check that logging is enabled, follow this procedure:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Locate the ",(0,i.jsx)(n.strong,{children:"Program.cs"})," file for your application."]}),"\n",(0,i.jsxs)(n.li,{children:["Check that the ",(0,i.jsx)(n.code,{children:"BuildAvaloniaApp"})," method calls ",(0,i.jsx)(n.code,{children:"LogToTrace"}),", for example:"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public static AppBuilder BuildAvaloniaApp()\n    => AppBuilder.Configure<App>()\n        .UsePlatformDetect()\n        .LogToTrace();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Without parameters, ",(0,i.jsx)(n.code,{children:"LogToTrace"})," will log messages with a severity of ",(0,i.jsx)(n.code,{children:"Warning"})," or higher. You can change this to another level by passing a ",(0,i.jsx)(n.code,{children:"LogLevel"})," parameter to the ",(0,i.jsx)(n.code,{children:"LogToTrace"})," call. For example:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"using Avalonia.Logging;\n...\npublic static AppBuilder BuildAvaloniaApp()\n    => AppBuilder.Configure<App>()\n        .UsePlatformDetect()\n        .LogToTrace(LogEventLevel.Verbose)\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["For the full API documentation on the ",(0,i.jsx)(n.code,{children:"LogEventLevel"})," enum, see ",(0,i.jsx)(n.a,{href:"https://reference.avaloniaui.net/api/Avalonia.Logging/LogEventLevel/",children:"here"}),"."]})}),"\n",(0,i.jsxs)(n.p,{children:["Log messages are then shown in the ",(0,i.jsx)(n.strong,{children:"Debug"})," view of the ",(0,i.jsx)(n.strong,{children:"Output"})," window of your IDE. For example, with verbose logging enabled:"]}),"\n",(0,i.jsx)("img",{src:s,alt:""}),"\n",(0,i.jsxs)(n.p,{children:["If you want to re-route these messages to different location, you can use the methods on the ",(0,i.jsx)(n.code,{children:"System.Diagnostics.Trace"})," component."]}),"\n",(0,i.jsx)(n.h2,{id:"log-area",children:"Log Area"}),"\n",(0,i.jsxs)(n.p,{children:["Each message from ",(0,i.jsx)(n.em,{children:"Avalonia UI"})," is assigned an area that can be used to filter the log. These are described by the members of ",(0,i.jsx)(n.code,{children:"Avalonia.Logging.LogArea"})," static class:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Property"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Binding"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Animations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Visual"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Layout"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Control"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["You can restrict the log to a specific area, or areas by adding arguments of type ",(0,i.jsx)(n.code,{children:"Avalonia.Logging.LogArea"})," after the ",(0,i.jsx)(n.code,{children:"LogEventLevel"})," argument in the ",(0,i.jsx)(n.code,{children:"LogToTrace"})," call. For example, this will log only property and layout messages:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"public static AppBuilder BuildAvaloniaApp()\n    => AppBuilder.Configure<App>()\n        .UsePlatformDetect()\n        .LogToTrace(LogEventLevel.Debug, LogArea.Property, LogArea.Layout);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}},11151:(e,n,o)=>{o.d(n,{Z:()=>t,a:()=>a});var i=o(67294);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);