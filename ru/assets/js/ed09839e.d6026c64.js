"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[51199],{92504:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var t=i(85893),o=i(11151);const a={id:"code-behind",title:"How To Use Code-behind"},s="How To Use Code-behind",l={id:"guides/implementation-guides/code-behind",title:"How To Use Code-behind",description:"This guide will show you how to use the code-behind programming pattern with Avalonia UI.",source:"@site/i18n/ru/docusaurus-plugin-content-docs/current/guides/implementation-guides/code-behind.md",sourceDirName:"guides/implementation-guides",slug:"/guides/implementation-guides/code-behind",permalink:"/avalonia-docs/ru/docs/guides/implementation-guides/code-behind",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/i18n/ru/docusaurus-plugin-content-docs/current/guides/implementation-guides/code-behind.md",tags:[],version:"current",frontMatter:{id:"code-behind",title:"How To Use Code-behind"}},d={},c=[{value:"Code-behind File",id:"code-behind-file",level:2},{value:"Locating Controls <a></a>",id:"locating-controls-",level:2},{value:"Set Properties",id:"set-properties",level:2},{value:"Handling Events <a></a>",id:"handling-events-",level:2}];function r(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"how-to-use-code-behind",children:"How To Use Code-behind"}),"\n",(0,t.jsxs)(n.p,{children:["This guide will show you how to use the code-behind programming pattern with ",(0,t.jsx)(n.em,{children:"Avalonia UI"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"You can use this pattern for small and simple applications. For large or complex applications it is  recommended that you use the alternative MVVM pattern."}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["For information about the concept of the MVVM programming pattern, see ",(0,t.jsx)(n.a,{href:"../../concepts/the-mvvm-pattern/",children:"here"}),"."]})}),"\n",(0,t.jsx)(n.h2,{id:"code-behind-file",children:"Code-behind File"}),"\n",(0,t.jsxs)(n.p,{children:["Window and user control files have an associated code-behind file that is commonly written in C#, and has the file extension ",(0,t.jsx)(n.code,{children:".axaml.cs"}),". The code-behind file is usually displayed underneath the XAML file in your editor."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, below you can see a ",(0,t.jsx)(n.code,{children:"MainWindow.xaml"})," file with its code-behind file ",(0,t.jsx)(n.code,{children:"MainWindow.xaml.cs"})," in the Visual Studio solution explorer:"]}),"\n",(0,t.jsx)(n.p,{children:"The code-behind file contains a class that (when it is created) has the same name as the XAML file. For example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"using Avalonia.Controls;\n\nnamespace AvaloniaApplication1.Views\n{\n    public partial class MainWindow : Window\n    {\n        public MainWindow()\n        {\n            InitializeComponent();\n        }\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Notice that this class name is the same as name of the XAML file, and is also referenced in the ",(0,t.jsx)(n.code,{children:"x:Class"})," attribute of the window element."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markup",children:'<Window xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n        xmlns:vm="using:AvaloniaApplication1.ViewModels"\n        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"\n        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"\n        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"\n        x:Class="AvaloniaApplication1.Views.h"\n        Icon="/Assets/avalonia-logo.ico"\n        Title="AvaloniaApplication1">\n  ...\n</Window>\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["If you make any changes to the class name in code, or its namespace, ensure that the  ",(0,t.jsx)(n.code,{children:"x:Class"})," attribute always matches, or you will get an error."]})}),"\n",(0,t.jsxs)(n.p,{children:["When the code-behind file is first added, it only has its constructor, and a call to the  ",(0,t.jsx)(n.code,{children:"InitializeComponent()"})," method - which is used to load the XAML at runtime."]}),"\n",(0,t.jsxs)(n.h2,{id:"locating-controls-",children:["Locating Controls ",(0,t.jsx)("a",{href:"#locating-controls",id:"locating-controls"})]}),"\n",(0,t.jsx)(n.p,{children:"When you use this programming pattern, you will write code (in the code-behind file) that manipulates the controls defined in the XAML."}),"\n",(0,t.jsxs)(n.p,{children:["To do this you will first need a reference to a control. Your code will use find-by-name to locate the button. So for this to work the control will need a name property - and this will come from a ",(0,t.jsx)(n.code,{children:"Name"})," attribute in XAML."]}),"\n",(0,t.jsx)(n.p,{children:"In this example, the button in the XAML has the name attribute defined:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markup",children:'<Window xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n        x:Class="AvaloniaApplication5.MainWindow">\n  <Button Name=GreetingButton">Hello World</Button>\n</Window>\n'})}),"\n",(0,t.jsx)(n.p,{children:"So now you can see that button appears by name in the Intellisense when you type in the code-behind file. It looks like this:"}),"\n",(0,t.jsx)(n.h2,{id:"set-properties",children:"Set Properties"}),"\n",(0,t.jsx)(n.p,{children:"With the control reference available in the code-behind, you can set properties. For example, you can change the background property like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"GreetingButton.Background = Brushes.Blue;\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"handling-events-",children:["Handling Events ",(0,t.jsx)("a",{href:"#handling-events",id:"handling-events"})]}),"\n",(0,t.jsx)(n.p,{children:"Any useful application will require you to implement some action! When you use the code-behind pattern, you write event handling procedures in the code-behind file."}),"\n",(0,t.jsx)(n.p,{children:"You write event handlers as methods in the code-behind file, and then reference them in the XAML with an event attribute. For example to add a handler for a button click:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markup",children:'<Window xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n        x:Class="AvaloniaApplication4.MainWindow">\n  <Button Click="GreetingButtonClickHandler">Hello World</Button>\n</Window>\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"public partial class MainWindow : Window\n{\n    public MainWindow()\n    {\n        InitializeComponent();\n    }\n\n    public void GreetingButtonClickHandler(object sender, RoutedEventArgs e)\n    {\n        // code here.\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Notice that an event handler in ",(0,t.jsx)(n.em,{children:"Avalonia UI"})," code uses a special argument of class ",(0,t.jsx)(n.code,{children:"RoutedEventArgs"}),". This includes information about how the event has been generated and propagated."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["For more information on the concepts of event routing, see ",(0,t.jsx)(n.a,{href:"/avalonia-docs/ru/docs/concepts/input/routed-events",children:"here"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>s});var t=i(67294);const o={},a=t.createContext(o);function s(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);