"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[13550],{99530:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>r,default:()=>p,frontMatter:()=>c,metadata:()=>l,toc:()=>h});var o=t(85893),i=t(11151),s=t(50485),a=t(22157),d=t(61606);const c={id:"add-and-layout-controls",title:"Add and Layout Controls"},r=void 0,l={id:"tutorials/music-store-app/add-and-layout-controls",title:"Add and Layout Controls",description:"Add and Layout some Controls",source:"@site/i18n/ru/docusaurus-plugin-content-docs/version-0.10.x/tutorials/music-store-app/add-and-layout-controls.md",sourceDirName:"tutorials/music-store-app",slug:"/tutorials/music-store-app/add-and-layout-controls",permalink:"/avalonia-docs/ru/docs/0.10.x/tutorials/music-store-app/add-and-layout-controls",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/i18n/ru/docusaurus-plugin-content-docs/version-0.10.x/tutorials/music-store-app/add-and-layout-controls.md",tags:[],version:"0.10.x",frontMatter:{id:"add-and-layout-controls",title:"Add and Layout Controls"},sidebar:"documentationSidebar",previous:{title:"Creating a Modern looking Window",permalink:"/avalonia-docs/ru/docs/0.10.x/tutorials/music-store-app/creating-a-modern-looking-window"},next:{title:"Opening a Dialog",permalink:"/avalonia-docs/ru/docs/0.10.x/tutorials/music-store-app/opening-a-dialog"}},u={},h=[{value:"Add and Layout some Controls",id:"add-and-layout-some-controls",level:2}];function m(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"add-and-layout-some-controls",children:"Add and Layout some Controls"}),"\n",(0,o.jsxs)(n.p,{children:["Let's start by adding a ",(0,o.jsx)(n.code,{children:"Button"})," to the ",(0,o.jsx)(n.code,{children:"MainWindow"}),". The button will allow the ",(0,o.jsx)(n.code,{children:"user"})," to purchase music in order to add to their collection."]}),"\n",(0,o.jsxs)(n.p,{children:["In ",(0,o.jsx)(n.code,{children:"MainWindow.axaml"})," change the code as follows, adding a Button inside the Panel."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markup",children:'<Panel>\n    <ExperimentalAcrylicBorder IsHitTestVisible="False">\n        <ExperimentalAcrylicBorder.Material>\n            <ExperimentalAcrylicMaterial\n                 BackgroundSource="Digger"\n                 TintColor="Black"\n                 TintOpacity="1"\n                 MaterialOpacity="0.65" />\n        </ExperimentalAcrylicBorder.Material>\n     </ExperimentalAcrylicBorder>\n\n     <Button Content="Buy Music" Command="{Binding BuyMusicCommand}"/>\n</Panel>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Notice that we have set the ",(0,o.jsx)(n.code,{children:"Content"})," property of the ",(0,o.jsx)(n.code,{children:"Button"})," to ",(0,o.jsx)(n.code,{children:"Buy Music"}),", and we also set a property called ",(0,o.jsx)(n.code,{children:"Command"})," to ",(0,o.jsx)(n.code,{children:"{Binding BuyMusicCommand}"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["If you remember earlier in the section about MVVM we discussed how ",(0,o.jsx)(n.code,{children:"Views"})," use ",(0,o.jsx)(n.code,{children:"Bindings"})," to talk to the ",(0,o.jsx)(n.code,{children:"ViewModel"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["This ",(0,o.jsx)(n.code,{children:"Binding Expression"})," is saying, when the button is ",(0,o.jsx)(n.code,{children:"clicked"}),", then ",(0,o.jsx)(n.code,{children:"execute"})," the ",(0,o.jsx)(n.code,{children:"command"})," called ",(0,o.jsx)(n.code,{children:"BuyMusicCommand"})," on the ViewModel."]}),"\n",(0,o.jsxs)(n.p,{children:["Open ",(0,o.jsx)(n.code,{children:"MainWindowViewModel.cs"})," and add the following code (the ",(0,o.jsx)(n.code,{children:"ICommand"})," Interface requires ",(0,o.jsx)(n.code,{children:"System.Windows.Input"})," but you'll need the additional namespaces, specified at the top, later on in the tutorial):"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-csharp",children:"using System;\nusing System.Collections.ObjectModel;\nusing System.Linq;\nusing System.Reactive.Concurrency;\nusing System.Reactive.Linq;\nusing System.Windows.Input;\nusing ReactiveUI;\n\nnamespace Avalonia.MusicStore.ViewModels\n\npublic class MainWindowViewModel : ViewModelBase\n    {\n        public MainWindowViewModel()\n        {\n            BuyMusicCommand = ReactiveCommand.Create(() =>\n            {\n                // Code here will be executed when the button is clicked.\n            });\n        }\n\n        public ICommand BuyMusicCommand { get; }\n    }\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Pressing the ",(0,o.jsx)(n.code,{children:"Debug Button"})," again to run the program we can see we have a button and when clicked setting a breakpoint inside the ",(0,o.jsx)(n.code,{children:"BuyMusicCommand"})," code we can see that the code is executed when it's hit."]}),"\n",(0,o.jsx)("img",{className:"center",src:s.Z,alt:"Buy Button"}),"\n",(0,o.jsx)(n.p,{children:"Let's position the button to the top right of the screen and make it look a bit nicer."}),"\n",(0,o.jsxs)(n.p,{children:["Place the ",(0,o.jsx)(n.code,{children:"<Button>"})," element inside a simple ",(0,o.jsx)(n.code,{children:"<Panel>"})," element."]}),"\n",(0,o.jsxs)(n.p,{children:["The simplest way to control the layout of a control is with the ",(0,o.jsx)(n.code,{children:"HorizontalAlignment"}),"and ",(0,o.jsx)(n.code,{children:"VerticalAlignment"})," properties."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markup",children:'<Panel>\n  <Button Content="Buy Music" Margin="40" Command="{Binding BuyMusicCommand}" HorizontalAlignment="Right" VerticalAlignment="Top" />\n</Panel>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["We also add a ",(0,o.jsx)(n.code,{children:"Margin"})," of 40 to the ",(0,o.jsx)(n.code,{children:"Button"})," so that the button is not right at the edge of the Window."]}),"\n",(0,o.jsxs)(n.p,{children:["You may prefer to have an icon or image instead of text inside your button. The are a few ways to do this, let's grab a store icon from ",(0,o.jsx)(n.a,{href:"https://avaloniaui.github.io/icons.html",children:"Avalonia - Fluent Icons"})]}),"\n",(0,o.jsx)(n.p,{children:"Scroll through this page and find an icon you like, then simply copy the code provided."}),"\n",(0,o.jsxs)(n.p,{children:["Find the name, in this case ",(0,o.jsx)(n.code,{children:"store_microsoft_regular"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"There should be some code similar to:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markup",children:'<StreamGeometry x:Key="store_microsoft_regular">M11.5 9.5V13H8V9.5H11.5Z M11.5 17.5V14H8V17.5H11.5Z M16 9.5V13H12.5V9.5H16Z M16 17.5V14H12.5V17.5H16Z M8 6V3.75C8 2.7835 8.7835 2 9.75 2H14.25C15.2165 2 16 2.7835 16 3.75V6H21.25C21.6642 6 22 6.33579 22 6.75V18.25C22 19.7688 20.7688 21 19.25 21H4.75C3.23122 21 2 19.7688 2 18.25V6.75C2 6.33579 2.33579 6 2.75 6H8ZM9.5 3.75V6H14.5V3.75C14.5 3.61193 14.3881 3.5 14.25 3.5H9.75C9.61193 3.5 9.5 3.61193 9.5 3.75ZM3.5 18.25C3.5 18.9404 4.05964 19.5 4.75 19.5H19.25C19.9404 19.5 20.5 18.9404 20.5 18.25V7.5H3.5V18.25Z</StreamGeometry>\n'})}),"\n",(0,o.jsx)(n.p,{children:"Let's create a file just for Icons."}),"\n",(0,o.jsxs)(n.p,{children:["In Rider right click on the project and select ",(0,o.jsx)(n.code,{children:"Add"})," \u2192 ",(0,o.jsx)(n.code,{children:"Avalonia Styles"})]}),"\n",(0,o.jsx)("img",{className:"center",src:a.Z,alt:"Add Styles"}),"\n",(0,o.jsxs)(n.p,{children:["Enter the name ",(0,o.jsx)(n.code,{children:"Icons"})," when prompted and press ",(0,o.jsx)(n.code,{children:"Enter"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["A new ",(0,o.jsx)(n.code,{children:"xaml"})," file will be created that we can put styles or icons inside."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markup",children:'<Styles xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">\n    <Design.PreviewWith>\n        <Border Padding="20">\n            \x3c!-- Add Controls for Previewer Here --\x3e\n        </Border>\n    </Design.PreviewWith>\n\n    \x3c!-- Add Styles Here --\x3e\n</Styles>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Add your Icon code inside wrapped in a ",(0,o.jsx)(n.code,{children:"Style"})," element as a resource like so."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markup",children:'<Styles xmlns="https://github.com/avaloniaui"\n        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">\n    <Design.PreviewWith>\n        <Border Padding="20">\n            \x3c!-- Add Controls for Previewer Here --\x3e\n        </Border>\n    </Design.PreviewWith>\n\n    \x3c!-- Add Styles Here --\x3e\n    <Style>\n        <Style.Resources>\n            <StreamGeometry x:Key="store_microsoft_regular">M11.5 9.5V13H8V9.5H11.5Z M11.5 17.5V14H8V17.5H11.5Z M16 9.5V13H12.5V9.5H16Z M16 17.5V14H12.5V17.5H16Z M8 6V3.75C8 2.7835 8.7835 2 9.75 2H14.25C15.2165 2 16 2.7835 16 3.75V6H21.25C21.6642 6 22 6.33579 22 6.75V18.25C22 19.7688 20.7688 21 19.25 21H4.75C3.23122 21 2 19.7688 2 18.25V6.75C2 6.33579 2.33579 6 2.75 6H8ZM9.5 3.75V6H14.5V3.75C14.5 3.61193 14.3881 3.5 14.25 3.5H9.75C9.61193 3.5 9.5 3.61193 9.5 3.75ZM3.5 18.25C3.5 18.9404 4.05964 19.5 4.75 19.5H19.25C19.9404 19.5 20.5 18.9404 20.5 18.25V7.5H3.5V18.25Z</StreamGeometry>\n        </Style.Resources>\n    </Style>\n</Styles>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Open ",(0,o.jsx)(n.code,{children:"App.axaml"})," and add a ",(0,o.jsx)(n.code,{children:"StyleInclude"})," so that the ",(0,o.jsx)(n.code,{children:"Icons.axaml"}),"can be loaded."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markup",children:'<Application.Styles>\n    <FluentTheme Mode="Dark"/>\n    <StyleInclude Source="avares://Avalonia.MusicStore/Icons.axaml" />\n</Application.Styles>\n'})}),"\n",(0,o.jsx)(n.p,{children:"Now build the application so that the Icons are available in the previewer."}),"\n",(0,o.jsxs)(n.p,{children:["Return to ",(0,o.jsx)(n.code,{children:"MainWindow.axaml"}),", we can add the Icon to the Button like so..."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markup",children:'<Button Margin="40" HorizontalAlignment="Right" VerticalAlignment="Top" Command="{Binding BuyMusicCommand}">\n    <PathIcon Data="{StaticResource store_microsoft_regular}" />\n</Button>\n'})}),"\n",(0,o.jsx)(n.p,{children:"Running the application we now have a nice button."}),"\n",(0,o.jsx)("img",{className:"center",src:d.Z,alt:"Pretty Button"})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}},22157:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/add-styles-14dc871a7ae2b87bf30cfd0937f7dde5.png"},50485:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/buy-button-6564ec6e4b1dec2a867b2e4b307e6bea.png"},61606:(e,n,t)=>{t.d(n,{Z:()=>o});const o=t.p+"assets/images/pretty-button-0015d557ec0b89b5b93b523afe87a7ea.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>a});var o=t(67294);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);