"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[18351],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>f});var n=a(67294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),m=o,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return a?n.createElement(f,i(i({ref:t},c),{},{components:a})):n.createElement(f,i({ref:t},c))}));function f(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},30127:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=a(87462),o=(a(67294),a(3905));const r=a.p+"assets/images/image (5)-c5e630acef09e9449d58b61423b6a02d.png",i={id:"creating-a-new-project",title:"Creating a new project"},l=void 0,s={unversionedId:"tutorials/todo-list-app/creating-a-new-project",id:"version-0.10.x/tutorials/todo-list-app/creating-a-new-project",title:"Creating a new project",description:"Visual Studio",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/version-0.10.x/tutorials/todo-list-app/creating-a-new-project.md",sourceDirName:"tutorials/todo-list-app",slug:"/tutorials/todo-list-app/creating-a-new-project",permalink:"/avalonia-docs/zh-Hans/docs/tutorials/todo-list-app/creating-a-new-project",draft:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/versioned_docs/version-0.10.x/tutorials/todo-list-app/creating-a-new-project.md",tags:[],version:"0.10.x",frontMatter:{id:"creating-a-new-project",title:"Creating a new project"},sidebar:"documentationSidebar",previous:{title:"ToDo List App",permalink:"/avalonia-docs/zh-Hans/docs/tutorials/todo-list-app/"},next:{title:"Creating a View",permalink:"/avalonia-docs/zh-Hans/docs/tutorials/todo-list-app/creating-a-view"}},p={},c=[{value:"Visual Studio",id:"visual-studio",level:2},{value:".NET Core CLI",id:"net-core-cli",level:2},{value:"Project structure",id:"project-structure",level:2}],u={toc:c},d="wrapper";function m(e){let{components:t,...a}=e;return(0,o.kt)(d,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"visual-studio"},"Visual Studio"),(0,o.kt)("p",null,"The easiest way to get started with Avalonia from Visual Studio is to ",(0,o.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=AvaloniaTeam.AvaloniaforVisualStudio"},"install the extension")," from the Visual Studio Marketplace. Once that is installed, you can create an Avalonia MVVM application:"),(0,o.kt)("img",{className:"center",src:r,alt:""}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Start Visual Studio"),(0,o.kt)("li",{parentName:"ul"},'Select "Create a new project" from the start window or ',(0,o.kt)("inlineCode",{parentName:"li"},"File -> New -> Project")," from the main menu"),(0,o.kt)("li",{parentName:"ul"},'Search for "Avalonia" and select "Avalonia MVVM Application"'),(0,o.kt)("li",{parentName:"ul"},'Click "Next"'),(0,o.kt)("li",{parentName:"ul"},'Enter "Todo" as the Project name'),(0,o.kt)("li",{parentName:"ul"},'Click "Create"')),(0,o.kt)("h2",{id:"net-core-cli"},".NET Core CLI"),(0,o.kt)("p",null,"First install the Avalonia templates for .NET Core by following the instructions ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/AvaloniaUI/avalonia-dotnet-templates"},"here"),"."),(0,o.kt)("p",null,"Now you can create the application from the template:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"dotnet new avalonia.mvvm -o Todo -n Todo\n")),(0,o.kt)("h2",{id:"project-structure"},"Project structure"),(0,o.kt)("p",null,"The newly created project will be pre-filled with a number of files and directories:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"Todo\n |- App.axaml\n |- App.axaml.cs\n |- Assets\n |   |- avalonia-logo.ico\n |- Models \n |- nuget.config \n |- Program.cs\n |- Todo.csproj\n |- ViewLocator.cs\n |- ViewModels\n |   |- MainWindowViewModel.cs\n |   |- ViewModelBase.cs\n |- Views\n |   |- MainWindow.axaml\n |   |- MainWindow.axaml.cs\n")),(0,o.kt)("p",null,"You can see there are directories for each of the concepts in the MVVM pattern ","(","models, views and view models",")"," as well as couple of other files and directories:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"Assets")," directory holds the binary assets for your application such as icons and bitmaps. Files placed in this directory will automatically be included as resources in the application."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"Models")," directory is currently empty, but as the name suggests this is where we'll be putting our models."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"ViewModels")," directory is pre-filled with a base class for view models and a view model for the application main window."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"Views")," directory just contains the application main window for now."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"App.axaml")," file is where XAML styles and templates that will apply to the entire application will be placed."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"Program.cs")," file is the entry point for execution of the application. Here you can configure the platform options for Avalonia if necessary."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"ViewLocator.cs")," file is used to look up views for view models. This will be explained in more detail later.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},".xaml or .axaml?")),(0,o.kt)("p",{parentName:"admonition"},"In this tutorial we will use the ",(0,o.kt)("inlineCode",{parentName:"p"},".axaml")," file extension for XAML files which is what will be created by the Visual Studio extension. If you're using the .NET Core CLI, the extension will be ",(0,o.kt)("inlineCode",{parentName:"p"},".xaml"),". See the ",(0,o.kt)("a",{parentName:"p",href:"../../guides/basics/introduction-to-xaml#xaml-or-axaml-file"},"Intro to XAML")," page for information on why this happens.")))}m.isMDXComponent=!0}}]);