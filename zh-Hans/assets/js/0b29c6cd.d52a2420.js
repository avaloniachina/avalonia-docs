"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[23894],{19176:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>a,metadata:()=>c,toc:()=>r});var i=t(85893),o=t(11151);const a={id:"change-notifications",title:"Change Notifications"},s=void 0,c={id:"data-binding/change-notifications",title:"Change Notifications",description:"Property Changes",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/version-0.10.x/data-binding/change-notifications.md",sourceDirName:"data-binding",slug:"/data-binding/change-notifications",permalink:"/avalonia-docs/zh-Hans/docs/0.10.x/data-binding/change-notifications",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/i18n/zh-Hans/docusaurus-plugin-content-docs/version-0.10.x/data-binding/change-notifications.md",tags:[],version:"0.10.x",frontMatter:{id:"change-notifications",title:"Change Notifications"},sidebar:"documentationSidebar",previous:{title:"The DataContext",permalink:"/avalonia-docs/zh-Hans/docs/0.10.x/data-binding/the-datacontext"},next:{title:"Bindings",permalink:"/avalonia-docs/zh-Hans/docs/0.10.x/data-binding/bindings"}},l={},r=[{value:"Property Changes",id:"property-changes",level:3},{value:"Collection Changes",id:"collection-changes",level:3}];function d(e){const n={a:"a",code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"property-changes",children:"Property Changes"}),"\n",(0,i.jsxs)(n.p,{children:["In order for Avalonia to know when a property on a view model has changed, the view model must implement change notifications. The easiest way to do this is to use ",(0,i.jsx)(n.code,{children:"ReactiveUI"})," and make your view model class inherit from ",(0,i.jsx)(n.code,{children:"ReactiveObject"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["You then add a setter for each property which calls ",(0,i.jsx)(n.code,{children:"RaiseAndSetIfChanged"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"using ReactiveUI;\n\npublic class MyViewModel : ReactiveObject\n{\n    private string caption;\n\n    public string Caption\n    {\n        get => caption;\n        set => this.RaiseAndSetIfChanged(ref caption, value);\n    }\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For more information see the ",(0,i.jsx)(n.a,{href:"https://reactiveui.net/docs/handbook/view-models/",children:"ReactiveUI documentation"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["If you don't want a dependency on ReactiveUI, you can implement ",(0,i.jsxs)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.inotifypropertychanged",children:[(0,i.jsx)(n.code,{children:"INotifyPropertyChanged"})," manually"]}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"collection-changes",children:"Collection Changes"}),"\n",(0,i.jsx)(n.p,{children:"Collections also need to implement change notifications. There are a number of collections which do this for you out of the box:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.objectmodel.observablecollection-1",children:"ObservableCollection"})," is available in the .NET base class library"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/reactiveui/DynamicData",children:"DynamicData"})," for more advanced scenarios"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://reactiveui.net/docs/handbook/obsolete/collections/reactive-list",children:"ReactiveList"})," in ReactiveUI (deprecated in favor of DynamicData)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"AvaloniaList"})," is shipped with Avalonia, but note that its API may change in future so for the moment it's recommended to not use it at the application level"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["If you want to implement collection change notifications yourself you can implement ",(0,i.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/dotnet/api/system.collections.specialized.inotifycollectionchanged",children:(0,i.jsx)(n.code,{children:"INotifyCollectionChanged"})})]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var i=t(67294);const o={},a=i.createContext(o);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);