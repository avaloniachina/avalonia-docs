"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[30633],{47474:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>o});var t=i(85893),a=i(11151);const l={id:"keyframe-animations",title:"Keyframe Animations"},s=void 0,r={id:"animations/keyframe-animations",title:"Keyframe Animations",description:"Keyframe animations in Avalonia are heavily inspired by CSS Animations. They can be used to animate any number of properties on a control, using any number of keyframes to define the states that each property must pass through. Keyframe animations can run any number of times, in either direction.",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/version-0.10.x/animations/keyframe-animations.md",sourceDirName:"animations",slug:"/animations/keyframe-animations",permalink:"/avalonia-docs/zh-Hans/docs/0.10.x/animations/keyframe-animations",draft:!1,unlisted:!1,editUrl:"https://github.com/AvaloniaUI/avalonia-docs/tree/main/i18n/zh-Hans/docusaurus-plugin-content-docs/version-0.10.x/animations/keyframe-animations.md",tags:[],version:"0.10.x",frontMatter:{id:"keyframe-animations",title:"Keyframe Animations"},sidebar:"documentationSidebar",previous:{title:"Animations",permalink:"/avalonia-docs/zh-Hans/docs/0.10.x/animations/"},next:{title:"Transitions",permalink:"/avalonia-docs/zh-Hans/docs/0.10.x/animations/transitions"}},d={},o=[{value:"Defining A Keyframe Animation",id:"defining-a-keyframe-animation",level:2},{value:"Triggering Animations",id:"triggering-animations",level:2},{value:"<code>KeyFrames</code>",id:"keyframes",level:2},{value:"Delay",id:"delay",level:2},{value:"Repeat",id:"repeat",level:2},{value:"Playback Direction",id:"playback-direction",level:2},{value:"Value fill modes",id:"value-fill-modes",level:2},{value:"Easings",id:"easings",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Keyframe animations in Avalonia are heavily inspired by CSS Animations. They can be used to animate any number of properties on a control, using any number of keyframes to define the states that each property must pass through. Keyframe animations can run any number of times, in either direction."}),"\n",(0,t.jsx)(n.h2,{id:"defining-a-keyframe-animation",children:"Defining A Keyframe Animation"}),"\n",(0,t.jsxs)(n.p,{children:["Keyframe animations are applied using styles. They can be defined on any style by adding an ",(0,t.jsx)(n.code,{children:"Animation"})," object to the ",(0,t.jsx)(n.code,{children:"Style.Animation"})," property:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markup",children:'<Window xmlns="https://github.com/avaloniaui">\n    <Window.Styles>\n        <Style Selector="Rectangle.red">\n            <Setter Property="Height" Value="100"/>\n            <Setter Property="Width" Value="100"/>\n            <Setter Property="Fill" Value="Red"/>\n            <Style.Animations>\n                <Animation Duration="0:0:1"> \n                    <KeyFrame Cue="0%">\n                        <Setter Property="Opacity" Value="0.0"/>\n                    </KeyFrame>\n                    <KeyFrame Cue="100%">\n                        <Setter Property="Opacity" Value="1.0"/>\n                    </KeyFrame>\n                </Animation>\n            </Style.Animations>\n        </Style>\n    </Window.Styles>\n\n    <Rectangle Classes="red"/>\n</Window>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["The example above animates the target ",(0,t.jsx)(n.code,{children:"Control"})," as defined by its ",(0,t.jsx)(n.a,{href:"../styling/selectors",children:"selector"}),". It will be run immediately when the control is loaded."]}),"\n",(0,t.jsx)(n.h2,{id:"triggering-animations",children:"Triggering Animations"}),"\n",(0,t.jsxs)(n.p,{children:["Unlike WPF's ",(0,t.jsx)(n.code,{children:"Triggers"}),", Animations defined in XAML rely on ",(0,t.jsx)(n.a,{href:"../styling/selectors",children:"selectors"})," for their triggering behavior. Selectors can always apply to a control, or they can conditionally apply (for example if the control has a style class appled)."]}),"\n",(0,t.jsxs)(n.p,{children:["If the selector isn't conditional then the animation will be triggered when a matching ",(0,t.jsx)(n.code,{children:"Control"})," is spawned into the visual tree. Otherwise, the animations will run whenever its selector is activated. When the selector no longer matches, the currently running animation will be canceled."]}),"\n",(0,t.jsx)(n.h2,{id:"keyframes",children:(0,t.jsx)(n.code,{children:"KeyFrames"})}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"KeyFrame"})," objects defines when the target ",(0,t.jsx)(n.code,{children:"Setter"})," objects should be applied on the target ",(0,t.jsx)(n.code,{children:"Control"}),", with value interpolation in-between."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Cue"})," property of an ",(0,t.jsx)(n.code,{children:"KeyFrame"})," object is based on the ",(0,t.jsx)(n.code,{children:"Duration"})," of the parent animation and is a percent of the animation's ",(0,t.jsx)(n.code,{children:"Duration"})," (i.e., ",(0,t.jsx)(n.code,{children:'"0%"'}),", ",(0,t.jsx)(n.code,{children:'"100%"'}),")."]}),"\n",(0,t.jsxs)(n.p,{children:["All ",(0,t.jsx)(n.code,{children:"Animation"})," objects should contain at least one ",(0,t.jsx)(n.code,{children:"KeyFrame"}),", with a ",(0,t.jsx)(n.code,{children:"Setter"})," that has target property and value."]}),"\n",(0,t.jsxs)(n.p,{children:["Multiple properties can be also animated in a single Animation by adding additional ",(0,t.jsx)(n.code,{children:"Setter"})," objects on the desired ",(0,t.jsx)(n.code,{children:"KeyFrame"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markup",children:'<Animation Duration="0:0:1"> \n    <KeyFrame Cue="0%">\n        <Setter Property="Opacity" Value="0.0"/>\n        <Setter Property="RotateTransform.Angle" Value="0.0"/>\n    </KeyFrame>\n    <KeyFrame Cue="100%">\n        <Setter Property="Opacity" Value="1.0"/>\n        <Setter Property="RotateTransform.Angle" Value="90.0"/>\n    </KeyFrame>\n</Animation>\n'})}),"\n",(0,t.jsx)(n.h2,{id:"delay",children:"Delay"}),"\n",(0,t.jsxs)(n.p,{children:["You can add a delay in a ",(0,t.jsx)(n.code,{children:"Animation"})," by defining the desired delay time on its ",(0,t.jsx)(n.code,{children:"Delay"})," property:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markup",children:'<Animation Duration="0:0:1"\n           Delay="0:0:1"> \n    ...\n</Animation>\n'})}),"\n",(0,t.jsx)(n.h2,{id:"repeat",children:"Repeat"}),"\n",(0,t.jsxs)(n.p,{children:["You can set the following repeat behaviors on ",(0,t.jsx)(n.code,{children:"IterationCount"})," property of an ",(0,t.jsx)(n.code,{children:"Animation"}),"."]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Value"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:[(0,t.jsx)(n.code,{children:"0"})," to N"]}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"Play N times."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"INFINITE"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"Repeat Indefinitely"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"playback-direction",children:"Playback Direction"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"PlaybackDirection"})," property defines how should the animation be played, including repeats."]}),"\n",(0,t.jsx)(n.p,{children:"The following table describes the possible behaviors:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Value"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"Normal"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"The animation is played normally."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"Reverse"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"The animation is played in reverse direction."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"Alternate"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"The animation is played forwards first, then backwards."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"AlternateReverse"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"The animation is played backwards first, then forwards."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"value-fill-modes",children:"Value fill modes"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"FillMode"})," property defines whether the first or last interpolated value of an animation persist before or after running an animation and on delays in-between runs."]}),"\n",(0,t.jsx)(n.p,{children:"The following table describes the possible behaviors:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Value"}),(0,t.jsx)(n.th,{style:{textAlign:"left"},children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"None"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"Value will not persist after animation nor the first value will be applied when the animation is delayed."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"Forward"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"The last interpolated value will be persisted to the target property."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"Backward"})}),(0,t.jsx)(n.td,{style:{textAlign:"left"},children:"The first interpolated value will be displayed on animation delay."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{style:{textAlign:"left"},children:(0,t.jsx)(n.code,{children:"Both"})}),(0,t.jsxs)(n.td,{style:{textAlign:"left"},children:["Both ",(0,t.jsx)(n.code,{children:"Forward"})," and ",(0,t.jsx)(n.code,{children:"Backward"})," behaviors will be applied."]})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"easings",children:"Easings"}),"\n",(0,t.jsxs)(n.p,{children:["Easing functions can be set by setting the name of the desired function to the ",(0,t.jsx)(n.code,{children:"Animation"}),"'s ",(0,t.jsx)(n.code,{children:"Easing"})," property:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markup",children:'<Animation Duration="0:0:1"\n           Delay="0:0:1"\n           Easing="BounceEaseIn"> \n    ...\n</Animation>\n'})}),"\n",(0,t.jsx)(n.p,{children:"You can also add your custom easing function class like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markup",children:'<Animation Duration="0:0:1"\n           Delay="0:0:1">\n    <Animation.Easing>\n        <local:YourCustomEasingClassHere/>\n    </Animation.Easing> \n    ...\n</Animation>\n'})}),"\n",(0,t.jsx)(n.p,{children:"The following list contains the built-in easing functions."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"LinearEasing (Default)"}),"\n",(0,t.jsx)(n.li,{children:"BackEaseIn"}),"\n",(0,t.jsx)(n.li,{children:"BackEaseInOut"}),"\n",(0,t.jsx)(n.li,{children:"BackEaseOut"}),"\n",(0,t.jsx)(n.li,{children:"BounceEaseIn"}),"\n",(0,t.jsx)(n.li,{children:"BounceEaseInOut"}),"\n",(0,t.jsx)(n.li,{children:"BounceEaseOut"}),"\n",(0,t.jsx)(n.li,{children:"CircularEaseIn"}),"\n",(0,t.jsx)(n.li,{children:"CircularEaseInOut"}),"\n",(0,t.jsx)(n.li,{children:"CircularEaseOut"}),"\n",(0,t.jsx)(n.li,{children:"CubicEaseIn"}),"\n",(0,t.jsx)(n.li,{children:"CubicEaseInOut"}),"\n",(0,t.jsx)(n.li,{children:"CubicEaseOut"}),"\n",(0,t.jsx)(n.li,{children:"ElasticEaseIn"}),"\n",(0,t.jsx)(n.li,{children:"ElasticEaseInOut"}),"\n",(0,t.jsx)(n.li,{children:"ElasticEaseOut"}),"\n",(0,t.jsx)(n.li,{children:"ExponentialEaseIn"}),"\n",(0,t.jsx)(n.li,{children:"ExponentialEaseInOut"}),"\n",(0,t.jsx)(n.li,{children:"ExponentialEaseOut"}),"\n",(0,t.jsx)(n.li,{children:"QuadraticEaseIn"}),"\n",(0,t.jsx)(n.li,{children:"QuadraticEaseInOut"}),"\n",(0,t.jsx)(n.li,{children:"QuadraticEaseOut"}),"\n",(0,t.jsx)(n.li,{children:"QuarticEaseIn"}),"\n",(0,t.jsx)(n.li,{children:"QuarticEaseInOut"}),"\n",(0,t.jsx)(n.li,{children:"QuarticEaseOut"}),"\n",(0,t.jsx)(n.li,{children:"QuinticEaseIn"}),"\n",(0,t.jsx)(n.li,{children:"QuinticEaseInOut"}),"\n",(0,t.jsx)(n.li,{children:"QuinticEaseOut"}),"\n",(0,t.jsx)(n.li,{children:"SineEaseIn"}),"\n",(0,t.jsx)(n.li,{children:"SineEaseInOut"}),"\n",(0,t.jsx)(n.li,{children:"SineEaseOut"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},11151:(e,n,i)=>{i.d(n,{Z:()=>r,a:()=>s});var t=i(67294);const a={},l=t.createContext(a);function s(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);